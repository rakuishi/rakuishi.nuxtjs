{
  "categories": [
    "WordPress"
  ],
  "date": "2013-08-25T12:17:54.000Z",
  "draft": false,
  "slug": 6053,
  "title": "[WordPress] 定型文を入力・管理できるショートコードを使ってみる",
  "bodyContent": "WordPress には、ショートコードという仕組みが用意されています。ショートコードを使用することで、定型文などを簡単に入力することができます。\n\n例えば、WordPress の投稿画面に、次のように入力してみます。\n\n<pre>[henneko]</code></pre>\n\nすると、このブログでは次のように変換されます。\n\n<pre>ラクイシさんは変態さんですね</code></pre>\n\nWordPress の内部では、[henneko] というのを見つけたら、指定された文字列に変換される処理が走ります。\n\nこのように、定型文を簡単に入力できます。また、その文面が変更になった時には、その記事ごとに修正することなく、ひとつの部分だけを書き換えるだけでよいので長期的に見てとても便利な仕組みと言えます。\n\n例えば、ブログ記事の最後に「記事を読んでくださりありがとうございます。」と入力している人は、ショートコードを使用するほうがよいかもしれません。\n\n## ショートコードを使用するには\n\nショートコードを使用するには functions.php ファイルを編集する必要があります。functions.php ファイルは、ブログのテーマファイルに含まれています。\n\nWordPress の [外観] → [テーマ編集] から テーマのための関数 (functions.php) を選択することで移動できます。functions.php には、テーマで使用する処理のまとまりが置いてあります。今回は、次のような文章を追加しました。文章は &lt;?php と ?&gt; の間に置きます。\n\n```\nfunction henneko_shortcode_handler() {\n  return 'ラクイシさんは変態さんですね';\n}\nadd_shortcode('henneko', 'henneko_shortcode_handler');\n```\n\nadd_shortcode 関数で、自分のオリジナルのショートコードを作成します。ここでは、[henneko] と入力された場合は、henneko_shortcode_handler 関数を呼び出し、その return された文字列を表示する処理が走ります。\n\nすると、冒頭のように [henneko] と入力するだけで指定の文字列に変換される、というわけです。\n\n参考：[Function Reference/add shortcode « WordPress Codex](http://codex.wordpress.org/Function_Reference/add_shortcode)\n\n## テーマファイルで使用するには\n\nテーマファイルでそのショートコードを利用する場合、 [henneko] だけでは駄目です。do_shortcode 関数を経由して、ショートコードを入力します。\n\n```\n<?php echo do_shortcode('[henneko]'); ?>\n```\n\n参考：[Function Reference/do shortcode « WordPress Codex](http://codex.wordpress.org/Function_Reference/do_shortcode)",
  "bodyHtml": "<p>WordPress には、ショートコードという仕組みが用意されています。ショートコードを使用することで、定型文などを簡単に入力することができます。</p>\n<p>例えば、WordPress の投稿画面に、次のように入力してみます。</p>\n<p>&lt;pre&gt;[henneko]&lt;/code&gt;&lt;/pre&gt;</p>\n<p>すると、このブログでは次のように変換されます。</p>\n<p>&lt;pre&gt;ラクイシさんは変態さんですね&lt;/code&gt;&lt;/pre&gt;</p>\n<p>WordPress の内部では、[henneko] というのを見つけたら、指定された文字列に変換される処理が走ります。</p>\n<p>このように、定型文を簡単に入力できます。また、その文面が変更になった時には、その記事ごとに修正することなく、ひとつの部分だけを書き換えるだけでよいので長期的に見てとても便利な仕組みと言えます。</p>\n<p>例えば、ブログ記事の最後に「記事を読んでくださりありがとうございます。」と入力している人は、ショートコードを使用するほうがよいかもしれません。</p>\n<h2>ショートコードを使用するには</h2>\n<p>ショートコードを使用するには functions.php ファイルを編集する必要があります。functions.php ファイルは、ブログのテーマファイルに含まれています。</p>\n<p>WordPress の [外観] → [テーマ編集] から テーマのための関数 (functions.php) を選択することで移動できます。functions.php には、テーマで使用する処理のまとまりが置いてあります。今回は、次のような文章を追加しました。文章は &lt;?php と ?&gt; の間に置きます。</p>\n<pre><code>function henneko_shortcode_handler() {\n  return 'ラクイシさんは変態さんですね';\n}\nadd_shortcode('henneko', 'henneko_shortcode_handler');\n</code></pre>\n<p>add_shortcode 関数で、自分のオリジナルのショートコードを作成します。ここでは、[henneko] と入力された場合は、henneko_shortcode_handler 関数を呼び出し、その return された文字列を表示する処理が走ります。</p>\n<p>すると、冒頭のように [henneko] と入力するだけで指定の文字列に変換される、というわけです。</p>\n<p>参考：<a href=\"http://codex.wordpress.org/Function_Reference/add_shortcode\">Function Reference/add shortcode « WordPress Codex</a></p>\n<h2>テーマファイルで使用するには</h2>\n<p>テーマファイルでそのショートコードを利用する場合、 [henneko] だけでは駄目です。do_shortcode 関数を経由して、ショートコードを入力します。</p>\n<pre><code>&lt;?php echo do_shortcode('[henneko]'); ?&gt;\n</code></pre>\n<p>参考：<a href=\"http://codex.wordpress.org/Function_Reference/do_shortcode\">Function Reference/do shortcode « WordPress Codex</a></p>\n",
  "dir": "static/content/archives",
  "base": "2013-08-25-6053.json",
  "ext": ".json",
  "sourceBase": "2013-08-25-6053.md",
  "sourceExt": ".md"
}