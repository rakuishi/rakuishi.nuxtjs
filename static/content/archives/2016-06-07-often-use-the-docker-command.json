{
  "categories": [
    "Blog"
  ],
  "date": "2016-06-07T13:44:24.000Z",
  "draft": false,
  "slug": "often-use-the-docker-command",
  "title": "Docker でよく使用するコマンド一覧",
  "bodyContent": "数カ月後にはしっかり忘れていると思うのでメモしておきます。\n\n## 前準備\n\n[VirtualBox](https://www.virtualbox.org/) と [Docker Toolbox](https://www.docker.com/docker-toolbox) をインストールしておきます。\n\nまた、作業するフォルダ上に Dockerfile を用意します。今回はサンプルに LAMP 環境を構築できる [tutumcloud/lamp: LAMP base docker image](https://github.com/tutumcloud/lamp) を使用しました。tutumcloud/lamp では、app フォルダはルートに設定されています。\n\n```\nFROM tutum/lamp:latest\nRUN rm -fr /app && mkdir /app\nEXPOSE 80 3306\nCMD [\"/run.sh\"]\n```\n\nファイル共有をテストするために、適当なファイルを用意しておきます。\n\n```\n$ mkdir app\n$ echo 'Hello, World!' > app/index.html\n```\n\n## Dokcer コマンド一覧\n\n### Dokcer マシンを立ち上げる\n\nDocker Toolbox インストール時に作成される Docker Quickstart Terminal.app を起動し、`default` という名前で用意された Linux 環境を立ち上げます。実際には内部に含まれている start.sh シェルスクリプトが実行されており、以下のコマンドによって Docker マシンを立ち上げています。\n\n```\n$ docker-machine create -d virtualbox --virtualbox-memory 2048 --virtualbox-disk-size 204800 default\n```\n\n### Docker マシン一覧を確認する\n\n```\n$ docker-machine ls\nNAME     ACTIVE  DRIVER      STATE    URL                        SWARM  DOCKER  ERRORS\ndefault  *       virtualbox  Running  tcp://192.168.99.100:2376         v1.9.1   \n```\n\n### Docker マシンの IP Address を確認する\n\n```\n$ docker-machine ip default\n192.168.99.100\n```\n\n### Dockerfile をビルドし、Docker イメージを作成する\n\n```\n$ docker build -t [IMAGE NAME] .\n```\n\n### Docker コンテナを起動する\n\n`-v` オプションを使用することでファイル共有が可能になります。\n\n```\n$ docker run -d -p 80:80 -v $(pwd)/app:/app --name=[CONTAINER NAME] [IMAGE NAME]\n```\n\n起動できれば、Docker マシンの IP Address をブラウザに入力し、実際に index.html の内容が表示されていることを確認できます。また、index.html を変更すれば、ブラウザ上に表示されている内容も変更されます。\n\n```\n$ open \"http://$(docker-machine ip default)\"\n```\n\n### Docker コンテナ内に入る\n\n```\n$ docker exec -it [CONTAINER NAME] bash\n```\n\n### Dokcer イメージ一覧を確認する\n\n```\n$ docker images\nREPOSITORY  TAG     IMAGE ID      CREATED       VIRTUAL SIZE\ntutum/lamp  latest  f02090877f42  5 months ago  426.5 MB\n```\n\n### Docker イメージを削除する\n\n```\n$ docker rmi -f [IMAGE NAME]\n```\n\n### Docker コンテナ一覧を確認する\n\n```\n$ docker ps -a\n```\n\n### Docker コンテナを削除する\n\n[CONTAINER NAME] は、[CONTAINER ID] でも良くて、その場合、先頭数文字などを入力するだけで削除できます。\n\n```\n$ docker rm -f [CONTAINER NAME]\n```",
  "bodyHtml": "<p>数カ月後にはしっかり忘れていると思うのでメモしておきます。</p>\n<h2>前準備</h2>\n<p><a href=\"https://www.virtualbox.org/\">VirtualBox</a> と <a href=\"https://www.docker.com/docker-toolbox\">Docker Toolbox</a> をインストールしておきます。</p>\n<p>また、作業するフォルダ上に Dockerfile を用意します。今回はサンプルに LAMP 環境を構築できる <a href=\"https://github.com/tutumcloud/lamp\">tutumcloud/lamp: LAMP base docker image</a> を使用しました。tutumcloud/lamp では、app フォルダはルートに設定されています。</p>\n<pre><code>FROM tutum/lamp:latest\nRUN rm -fr /app &amp;&amp; mkdir /app\nEXPOSE 80 3306\nCMD [&quot;/run.sh&quot;]\n</code></pre>\n<p>ファイル共有をテストするために、適当なファイルを用意しておきます。</p>\n<pre><code>$ mkdir app\n$ echo 'Hello, World!' &gt; app/index.html\n</code></pre>\n<h2>Dokcer コマンド一覧</h2>\n<h3>Dokcer マシンを立ち上げる</h3>\n<p>Docker Toolbox インストール時に作成される Docker Quickstart Terminal.app を起動し、<code>default</code> という名前で用意された Linux 環境を立ち上げます。実際には内部に含まれている start.sh シェルスクリプトが実行されており、以下のコマンドによって Docker マシンを立ち上げています。</p>\n<pre><code>$ docker-machine create -d virtualbox --virtualbox-memory 2048 --virtualbox-disk-size 204800 default\n</code></pre>\n<h3>Docker マシン一覧を確認する</h3>\n<pre><code>$ docker-machine ls\nNAME     ACTIVE  DRIVER      STATE    URL                        SWARM  DOCKER  ERRORS\ndefault  *       virtualbox  Running  tcp://192.168.99.100:2376         v1.9.1   \n</code></pre>\n<h3>Docker マシンの IP Address を確認する</h3>\n<pre><code>$ docker-machine ip default\n192.168.99.100\n</code></pre>\n<h3>Dockerfile をビルドし、Docker イメージを作成する</h3>\n<pre><code>$ docker build -t [IMAGE NAME] .\n</code></pre>\n<h3>Docker コンテナを起動する</h3>\n<p><code>-v</code> オプションを使用することでファイル共有が可能になります。</p>\n<pre><code>$ docker run -d -p 80:80 -v $(pwd)/app:/app --name=[CONTAINER NAME] [IMAGE NAME]\n</code></pre>\n<p>起動できれば、Docker マシンの IP Address をブラウザに入力し、実際に index.html の内容が表示されていることを確認できます。また、index.html を変更すれば、ブラウザ上に表示されている内容も変更されます。</p>\n<pre><code>$ open &quot;http://$(docker-machine ip default)&quot;\n</code></pre>\n<h3>Docker コンテナ内に入る</h3>\n<pre><code>$ docker exec -it [CONTAINER NAME] bash\n</code></pre>\n<h3>Dokcer イメージ一覧を確認する</h3>\n<pre><code>$ docker images\nREPOSITORY  TAG     IMAGE ID      CREATED       VIRTUAL SIZE\ntutum/lamp  latest  f02090877f42  5 months ago  426.5 MB\n</code></pre>\n<h3>Docker イメージを削除する</h3>\n<pre><code>$ docker rmi -f [IMAGE NAME]\n</code></pre>\n<h3>Docker コンテナ一覧を確認する</h3>\n<pre><code>$ docker ps -a\n</code></pre>\n<h3>Docker コンテナを削除する</h3>\n<p>[CONTAINER NAME] は、[CONTAINER ID] でも良くて、その場合、先頭数文字などを入力するだけで削除できます。</p>\n<pre><code>$ docker rm -f [CONTAINER NAME]\n</code></pre>\n",
  "dir": "static/content/archives",
  "base": "2016-06-07-often-use-the-docker-command.json",
  "ext": ".json",
  "sourceBase": "2016-06-07-often-use-the-docker-command.md",
  "sourceExt": ".md"
}