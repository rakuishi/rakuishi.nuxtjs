{
  "categories": [
    "Web Service"
  ],
  "date": "2016-04-18T12:21:09.000Z",
  "draft": "falce",
  "slug": "aniradime",
  "title": "ネット配信されているアニラジの更新情報をまとめたサイトを作った",
  "bodyContent": "仕事で RESTful API サーバーを Ruby on Rails で開発した。その時の勉強のために借りた VPS（仮想専用サーバー）を再利用して、普段聴いているアニラジの更新情報をまとめたサイトを作った。\n\n大学生の頃に「とある科学の超電磁砲」のネットラジオを聴いて以来、普通のひとがテレビを見るように、だいたいネットラジオを聴いている。また、面白い番組が増えていて、チェックするのが大変だった。そのような経緯があり、久しぶりに自分が欲しいものを作った次第である。勉強すると、自分の思うようになる瞬間が増えるのが喜ばしい。\n\n![](/images/2016/04/aniradime.png)\n\n* [aniradime](http://radio.rakuishi.com/)\n* [rakuishi/aniradime: Gather anime radio waves.](https://github.com/rakuishi/aniradime)\n\n## Library\n\nこの機会に勉強して採用したライブラリなどを紹介してみる。\n\n### [Nokogiri](http://www.nokogiri.org/)\n\nRSS が提供されていないサイトの情報を感謝の気持ちを持って抜き出すために（ちゃんと配信元を書いている）、スクレイピングでよく使われる Nokogiri を採用した。以下のように、スクレイピングのコードが簡単に書ける。\n\n```Ruby\ndoc = Nokogiri::HTML(open(url))\ndoc.xpath('//ul[@class=\"radioList\"]//li[@class=\"radio\"]').each do |node|\n  puts node.xpath('div[@class=\"name\"]').inner_text\nend\n```\n\n### [Slim - A Fast, Lightweight Template Engine for Ruby](http://slim-lang.com/)\n\nRuby on Rails に標準で導入されている ERB で満足していたのですが、試しに Slim を採用してみた。括弧を省略するのと、インデントを適切に揃えれば、問題なく動作するのが学習コストが少なくてよかった。また、自動で HTML 圧縮されるから、[PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/?hl=ja) の点数が上がる。\n\n### [Lazy Load Plugin for jQuery](http://www.appelsiini.net/projects/lazyload)\n\n画像のリクエスト数を抑えるために採用してみた。`background-image` にも対応していた。\n\n### [Support for theme-color in Chrome 39 for Android](https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android)\n\n```\n<meta content=\"#00cdac\" name=\"theme-color\" />\n```\n\nメタタグに上記のコードを置くと Android の Chrome アプリのヘッダーカラーを指定できる。Recent Apps の色も変わる。\n\n### [rakuishi/jquery-infinite-scroll](https://github.com/rakuishi/jquery-infinite-scroll)\n\n2 週間ぐらい前に書いたコードを再利用して、Ajax による読み込み処理を書いた。Rails4 から導入されている Turbolink でも出来るのかもしれないけれど、学習コストが高そうで諦めた。\n\n## Special Thanks\n\n日常の空隙を埋めてくれるネットラジオ配信会社さんに多謝です。これからもお世話になります。",
  "bodyHtml": "<p>仕事で RESTful API サーバーを Ruby on Rails で開発した。その時の勉強のために借りた VPS（仮想専用サーバー）を再利用して、普段聴いているアニラジの更新情報をまとめたサイトを作った。</p>\n<p>大学生の頃に「とある科学の超電磁砲」のネットラジオを聴いて以来、普通のひとがテレビを見るように、だいたいネットラジオを聴いている。また、面白い番組が増えていて、チェックするのが大変だった。そのような経緯があり、久しぶりに自分が欲しいものを作った次第である。勉強すると、自分の思うようになる瞬間が増えるのが喜ばしい。</p>\n<p><img src=\"/images/2016/04/aniradime.png\" alt=\"\"></p>\n<ul>\n<li><a href=\"http://radio.rakuishi.com/\">aniradime</a></li>\n<li><a href=\"https://github.com/rakuishi/aniradime\">rakuishi/aniradime: Gather anime radio waves.</a></li>\n</ul>\n<h2>Library</h2>\n<p>この機会に勉強して採用したライブラリなどを紹介してみる。</p>\n<h3><a href=\"http://www.nokogiri.org/\">Nokogiri</a></h3>\n<p>RSS が提供されていないサイトの情報を感謝の気持ちを持って抜き出すために（ちゃんと配信元を書いている）、スクレイピングでよく使われる Nokogiri を採用した。以下のように、スクレイピングのコードが簡単に書ける。</p>\n<pre><code class=\"hljs\">doc = Nokogiri::HTML(open(url))\ndoc.xpath(<span class=\"hljs-string\">'//ul[@class=\"radioList\"]//li[@class=\"radio\"]'</span>).each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|node|</span>\n  puts node.xpath(<span class=\"hljs-string\">'div[@class=\"name\"]'</span>).inner_text\n<span class=\"hljs-keyword\">end</span></code></pre><h3><a href=\"http://slim-lang.com/\">Slim - A Fast, Lightweight Template Engine for Ruby</a></h3>\n<p>Ruby on Rails に標準で導入されている ERB で満足していたのですが、試しに Slim を採用してみた。括弧を省略するのと、インデントを適切に揃えれば、問題なく動作するのが学習コストが少なくてよかった。また、自動で HTML 圧縮されるから、<a href=\"https://developers.google.com/speed/pagespeed/insights/?hl=ja\">PageSpeed Insights</a> の点数が上がる。</p>\n<h3><a href=\"http://www.appelsiini.net/projects/lazyload\">Lazy Load Plugin for jQuery</a></h3>\n<p>画像のリクエスト数を抑えるために採用してみた。<code>background-image</code> にも対応していた。</p>\n<h3><a href=\"https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android\">Support for theme-color in Chrome 39 for Android</a></h3>\n<pre><code>&lt;meta content=&quot;#00cdac&quot; name=&quot;theme-color&quot; /&gt;\n</code></pre>\n<p>メタタグに上記のコードを置くと Android の Chrome アプリのヘッダーカラーを指定できる。Recent Apps の色も変わる。</p>\n<h3><a href=\"https://github.com/rakuishi/jquery-infinite-scroll\">rakuishi/jquery-infinite-scroll</a></h3>\n<p>2 週間ぐらい前に書いたコードを再利用して、Ajax による読み込み処理を書いた。Rails4 から導入されている Turbolink でも出来るのかもしれないけれど、学習コストが高そうで諦めた。</p>\n<h2>Special Thanks</h2>\n<p>日常の空隙を埋めてくれるネットラジオ配信会社さんに多謝です。これからもお世話になります。</p>\n",
  "dir": "static/content/archives",
  "base": "2016-04-18-aniradime.json",
  "ext": ".json",
  "sourceBase": "2016-04-18-aniradime.md",
  "sourceExt": ".md"
}