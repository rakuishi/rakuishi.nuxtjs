{
  "categories": [
    "Android"
  ],
  "date": "2014-08-14T13:34:53.000Z",
  "draft": false,
  "slug": 6766,
  "title": "[Android] GridView の横幅を wrap_content に従わせる",
  "bodyContent": "GridView の中のアイテムを整列させるルールとして stretchMode を指定するのですが、アイテム同士が隙間なく並んだ状態で GridView 全体を画面中央に寄せるという要望は、既存の GridView では思ったように実装出来ませんでした。\n\n以下の実装をしました。\n\n* GridView に `strechMode=\"none\"`\n* GridView の横幅に `wrap_cotent\"`\n* GridView の親ビューに `gravity=\"center\"`\n* GridView の親ビュー横幅に `match_parent`\n\nですが、何故か GridView には `wrap_content` が効かずに、`match_parent` のような振る舞いになってしまう。\n\nどうやら自身の縦幅・横幅を決定する `onMeasure()` で、計算するしかないみたいです。その実装をメモしておきます。\n\n## GridView の横幅を onMeasure() で計算する\n\nFixedGridView という GridView のサブクラスを作り、`onMeasure()` で、横幅と縦幅を計算しています。\n\n計算結果を `setMeasuredDimension()` にセットすれば OK です。\n\nカラムサイズを決め打ちしていますが、API Level 16 以上では、`getColumnWidth()` が使えます：\n\n```\nimport android.content.Context;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.widget.GridView;\n\npublic class FixedGridView extends GridView {\n\n  private static final int COLUMN_SIZE = 150;\n\n  public FixedGridView(Context context) {\n    super(context);\n  }\n\n  public FixedGridView(Context context, AttributeSet attrs) {\n    super(context, attrs);\n  }\n\n  public FixedGridView(Context context, AttributeSet attrs, int defStyle) {\n    super(context, attrs, defStyle);\n  }\n\n  @Override\n  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n    super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\n    int num = getNumColumns();\n    float density = getResources().getDisplayMetrics().density;\n    int px = Math.round(COLUMN_SIZE * density);\n\n    int width  = px * num; // px * カラム数\n    int height = px * (int)Math.ceil((float)getAdapter().getCount()/(float)num); // px * 行数\n    setMeasuredDimension(width, height);\n  }\n}\n```\n\n後は、アイテム同士が隙間なく並んだ状態で GridView 全体を画面中央に寄せるレイアウトを記述すれば OK です：\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"wrap_content\"\n  android:padding=\"6dp\"\n  android:gravity=\"center\">\n\n  <FixedGridView\n    android:id=\"@+id/gridview\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:columnWidth=\"150dp\"\n    android:numColumns=\"auto_fit\"\n    android:stretchMode=\"none\"/>\n\n</LinearLayout>\n```\n\n## 参考\n\n* [Android: GridView width not wrapping to content? - Stack Overflow](http://stackoverflow.com/questions/5650760/android-gridview-width-not-wrapping-to-content)\n* [Programming Memo GridViewのstretchModeについて](http://tmken2.blog95.fc2.com/blog-entry-14.html)",
  "bodyHtml": "<p>GridView の中のアイテムを整列させるルールとして stretchMode を指定するのですが、アイテム同士が隙間なく並んだ状態で GridView 全体を画面中央に寄せるという要望は、既存の GridView では思ったように実装出来ませんでした。</p>\n<p>以下の実装をしました。</p>\n<ul>\n<li>GridView に <code>strechMode=&quot;none&quot;</code></li>\n<li>GridView の横幅に <code>wrap_cotent&quot;</code></li>\n<li>GridView の親ビューに <code>gravity=&quot;center&quot;</code></li>\n<li>GridView の親ビュー横幅に <code>match_parent</code></li>\n</ul>\n<p>ですが、何故か GridView には <code>wrap_content</code> が効かずに、<code>match_parent</code> のような振る舞いになってしまう。</p>\n<p>どうやら自身の縦幅・横幅を決定する <code>onMeasure()</code> で、計算するしかないみたいです。その実装をメモしておきます。</p>\n<h2>GridView の横幅を onMeasure() で計算する</h2>\n<p>FixedGridView という GridView のサブクラスを作り、<code>onMeasure()</code> で、横幅と縦幅を計算しています。</p>\n<p>計算結果を <code>setMeasuredDimension()</code> にセットすれば OK です。</p>\n<p>カラムサイズを決め打ちしていますが、API Level 16 以上では、<code>getColumnWidth()</code> が使えます：</p>\n<pre><code>import android.content.Context;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.widget.GridView;\n\npublic class FixedGridView extends GridView {\n\n  private static final int COLUMN_SIZE = 150;\n\n  public FixedGridView(Context context) {\n    super(context);\n  }\n\n  public FixedGridView(Context context, AttributeSet attrs) {\n    super(context, attrs);\n  }\n\n  public FixedGridView(Context context, AttributeSet attrs, int defStyle) {\n    super(context, attrs, defStyle);\n  }\n\n  @Override\n  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n    super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\n    int num = getNumColumns();\n    float density = getResources().getDisplayMetrics().density;\n    int px = Math.round(COLUMN_SIZE * density);\n\n    int width  = px * num; // px * カラム数\n    int height = px * (int)Math.ceil((float)getAdapter().getCount()/(float)num); // px * 行数\n    setMeasuredDimension(width, height);\n  }\n}\n</code></pre>\n<p>後は、アイテム同士が隙間なく並んだ状態で GridView 全体を画面中央に寄せるレイアウトを記述すれば OK です：</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n\n&lt;LinearLayout\n  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;wrap_content&quot;\n  android:padding=&quot;6dp&quot;\n  android:gravity=&quot;center&quot;&gt;\n\n  &lt;FixedGridView\n    android:id=&quot;@+id/gridview&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:columnWidth=&quot;150dp&quot;\n    android:numColumns=&quot;auto_fit&quot;\n    android:stretchMode=&quot;none&quot;/&gt;\n\n&lt;/LinearLayout&gt;\n</code></pre>\n<h2>参考</h2>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/5650760/android-gridview-width-not-wrapping-to-content\">Android: GridView width not wrapping to content? - Stack Overflow</a></li>\n<li><a href=\"http://tmken2.blog95.fc2.com/blog-entry-14.html\">Programming Memo GridViewのstretchModeについて</a></li>\n</ul>\n",
  "dir": "static/content/archives",
  "base": "2014-08-14-6766.json",
  "ext": ".json",
  "sourceBase": "2014-08-14-6766.md",
  "sourceExt": ".md"
}