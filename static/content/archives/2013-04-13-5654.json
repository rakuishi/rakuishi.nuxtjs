{
  "categories": [
    "Mac"
  ],
  "date": "2013-04-13T12:39:48.000Z",
  "draft": false,
  "slug": 5654,
  "title": "[Mac][cron] 指定した音楽ファイルを一定時間ごとに再生する",
  "bodyContent": "定期的な作業を自動実行したい時に、cron でスケジューリングすることができます。cron には、実行したいプログラム（シェルスクリプト）・処理と、時間をテキストで指定します。\n\n今回は、指定した時間ごとに音楽を鳴らすように設定してみます。\n\n## cron にスケジュールを追加\n\ncron にスケジュールを追加するために、Terminal を起動します。\n\ncron スケジュールの編集には、crontab というプログラムを利用します。「crontab -e」を実行すると vi エディタが起動して、cron の設定（時間・実行するプログラム）ができるようになります。\n\nしかし、自分の環境では何故か vi エディタで保存することができなかったので、nano エディタで編集します。\n\n```\n$ EDITOR=nano crontab -e\n```\n\n以下のように設定しました。\n\n```\n30 * * * * afplay /Users/rakuishi/Music/iTunes/iTunes Media/Music/EGOIST/All Alone With You - EP/01 All Alone With You.m4a > /dev/null 2>&1\n```\n\n30分 * 時 * 日 * 月 * 曜日に、「/Users/（省略）/01 All Alone With You.m4a」にある音楽ファイルを鳴らします（afplay）。鳴らした後に、標準出力と標準エラー出力を破棄させます（> /dev/null 2>&1）。\n\nつまり、毎時30分になったら音楽が鳴ります。\n\nこの cron の指定は、以下のブログを参考に書いています。\n\n参考：[crontabの設定メモ - ザリガニが見ていた...。](http://d.hatena.ne.jp/zariganitosh/20090303/1236127071)\n\nちなみに、nano エディタで保存する場合は、ctrl + o → enter → ctrl + x です。enter を押す必要があるのに、なかなか気付かなかった。\n\nまた、再生したい音楽ファイルを terminal にドラッグ＆ドロップすることで、長いパスが挿入されます。\n\n## cron に登録したスケジュールの確認\n\n「crontab -l」することで、登録された cron を見ることができます。ちゃんと登録されているのが確認できますね。\n\n```\n$ crontab -l\n30 * * * * afplay /Users/rakuishi/Music/iTunes/iTunes Media/Music/EGOIST/All Alone With You - EP/01 All Alone With You.m4a > /dev/null 2>&1\n```\n\nこれで指定した時間に音楽が再生されます。\n\n## 音楽ファイルの再生を止める\n\n音楽が再生されて喜んだ後に、「あれ、音楽止められない」という事態に陥ります（笑）。これはプロセスから削除する必要があります。\n\n今、起動しているプログラムを確認するには、「ps -e」命令を使用します。\n\n```\n$ps -e\n809 ?? 0:00.71 afplay /Users/rakuishi/Music/iTunes/iTunes Media/Mus\n```\n\nするとプロセス番号 809 で音楽が再生されているので、このプログラムを終了します。終了するには、「kill -TERM プロセス番号」を入力します。\n\n```\nkill -TERM 809\n```\n\nこれで音楽が再生されなくなりました。",
  "bodyHtml": "<p>定期的な作業を自動実行したい時に、cron でスケジューリングすることができます。cron には、実行したいプログラム（シェルスクリプト）・処理と、時間をテキストで指定します。</p>\n<p>今回は、指定した時間ごとに音楽を鳴らすように設定してみます。</p>\n<h2>cron にスケジュールを追加</h2>\n<p>cron にスケジュールを追加するために、Terminal を起動します。</p>\n<p>cron スケジュールの編集には、crontab というプログラムを利用します。「crontab -e」を実行すると vi エディタが起動して、cron の設定（時間・実行するプログラム）ができるようになります。</p>\n<p>しかし、自分の環境では何故か vi エディタで保存することができなかったので、nano エディタで編集します。</p>\n<pre><code>$ EDITOR=nano crontab -e\n</code></pre>\n<p>以下のように設定しました。</p>\n<pre><code>30 * * * * afplay /Users/rakuishi/Music/iTunes/iTunes Media/Music/EGOIST/All Alone With You - EP/01 All Alone With You.m4a &gt; /dev/null 2&gt;&amp;1\n</code></pre>\n<p>30分 * 時 * 日 * 月 * 曜日に、「/Users/（省略）/01 All Alone With You.m4a」にある音楽ファイルを鳴らします（afplay）。鳴らした後に、標準出力と標準エラー出力を破棄させます（&gt; /dev/null 2&gt;&amp;1）。</p>\n<p>つまり、毎時30分になったら音楽が鳴ります。</p>\n<p>この cron の指定は、以下のブログを参考に書いています。</p>\n<p>参考：<a href=\"http://d.hatena.ne.jp/zariganitosh/20090303/1236127071\">crontabの設定メモ - ザリガニが見ていた...。</a></p>\n<p>ちなみに、nano エディタで保存する場合は、ctrl + o → enter → ctrl + x です。enter を押す必要があるのに、なかなか気付かなかった。</p>\n<p>また、再生したい音楽ファイルを terminal にドラッグ＆ドロップすることで、長いパスが挿入されます。</p>\n<h2>cron に登録したスケジュールの確認</h2>\n<p>「crontab -l」することで、登録された cron を見ることができます。ちゃんと登録されているのが確認できますね。</p>\n<pre><code>$ crontab -l\n30 * * * * afplay /Users/rakuishi/Music/iTunes/iTunes Media/Music/EGOIST/All Alone With You - EP/01 All Alone With You.m4a &gt; /dev/null 2&gt;&amp;1\n</code></pre>\n<p>これで指定した時間に音楽が再生されます。</p>\n<h2>音楽ファイルの再生を止める</h2>\n<p>音楽が再生されて喜んだ後に、「あれ、音楽止められない」という事態に陥ります（笑）。これはプロセスから削除する必要があります。</p>\n<p>今、起動しているプログラムを確認するには、「ps -e」命令を使用します。</p>\n<pre><code>$ps -e\n809 ?? 0:00.71 afplay /Users/rakuishi/Music/iTunes/iTunes Media/Mus\n</code></pre>\n<p>するとプロセス番号 809 で音楽が再生されているので、このプログラムを終了します。終了するには、「kill -TERM プロセス番号」を入力します。</p>\n<pre><code>kill -TERM 809\n</code></pre>\n<p>これで音楽が再生されなくなりました。</p>\n",
  "dir": "static/content/archives",
  "base": "2013-04-13-5654.json",
  "ext": ".json",
  "sourceBase": "2013-04-13-5654.md",
  "sourceExt": ".md"
}