{
  "categories": [
    "PHP"
  ],
  "date": "2013-12-21T15:00:47.000Z",
  "draft": false,
  "slug": 6365,
  "title": "すぐ分かるテンプレートエンジン Smarty",
  "bodyContent": "Smarty は PHP で使用できるテンプレートエンジンです。\n\nPHP は HTML を混ぜて記述できますが、その便利さのおかげでロジック部分とデザイン部分が混合してしまいます。一人でやる分にはそれでいいのですが、混合しているとプログラマとデザイナで作業を分担することが出来ません。そこで登場するのがテンプレートエンジン Smarty です。\n\nSmarty を使うのは簡単です。基本的な流れとして、ロジックを書いた PHP ファイルと、デザインを書いたテンプレート HTML ファイルを作成します。\n\nPHP ファイルには、Smarty ライブラリを include して、そこにユーザに見せる値とか、データベースから SELECT した内容などを登録します。一方、テンプレート（HTML）には、デザインを書いて、値を嵌め込めば OK です。また、if/for/foreach 文も記述できます。\n\nでは、実際に使ってみます。\n\n## Smarty の環境準備\n\nPHP の環境は、ローカル環境 [MAMP](http://rakuishi.com/archives/6299/) で用意しています。\n\n[Smarty の公式サイト](http://www.smarty.net/) からライブラリをダウンロードします。解凍して、その中の lib フォルダを作業ディレクトリに置きます。\n\nまた、作業ディレクトに templates, templates_c フォルダ、sample.php を置きます。また、templates フォルダ以下に sample.html を置きます。templates_c フォルダは、キャッシュファイルが自動で格納される場所です。このキャッシュファイルはコンパイル結果が格納されており、これが再利用されます。サーバーで実行する場合、ディレクトリに書き込み権限を与える必要があります。\n\n![](/images/2013/12/6365_1.png)\n\n## 簡単なコードで Smarty を使う\n\nでは、ロジック部分に当たる sample.php に以下の内容を記述します。\n\n$smarty にファイルの場所を教えて、assign で変数名（hello）に値（Hello World）を割り当て、テンプレートファイルを表示（display）させています。ここには html タグなどは記述しません。\n\n```\n<?php\n\nrequire_once(\"libs/Smarty.class.php\");\n\n$smarty = new Smarty();\n$smarty->template_dir = \"templates/\";\n$smarty->compile_dir = \"templates_c/\";\n\n// 変数\n$smarty->assign(\"hello\", \"Hello World!\");\n\n// 配列\n$objects = array(\"北海道\", \"青森県\", \"秋田県\", \"岩手県\", \"山形県\");\n$smarty->assign(\"objects\", $objects);\n\n// テンプレートファイルを読み込む\n$smarty->display('sample.html');\n\n?>\n```\n\n次に、テンプレート部分に当たる sample.html に以下の内容を記述します。\n\n先ほど登録した値を {$変数名} で呼び出します。foreach も PHP とは異なる書き方ですが、テンプレートファイル内で使用できます。\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\" />\n</head>\n<body>\n\n{$hello}\n\n  {foreach $objects as $object}\n  * {$object}\n  {/foreach}\n\n</body>\n</html>\n```\n\nsample.php をブラウザから確認すると以下のように表示されます。ロジック部分とテンプレート部分を綺麗に分離したコードがうまく動作しているのが確認できます。\n\n![](/images/2013/12/6365_2.png)\n\n以上、テンプレートエンジン Smarty の環境準備／簡単なコードによる動作を紹介しました。",
  "bodyHtml": "<p>Smarty は PHP で使用できるテンプレートエンジンです。</p>\n<p>PHP は HTML を混ぜて記述できますが、その便利さのおかげでロジック部分とデザイン部分が混合してしまいます。一人でやる分にはそれでいいのですが、混合しているとプログラマとデザイナで作業を分担することが出来ません。そこで登場するのがテンプレートエンジン Smarty です。</p>\n<p>Smarty を使うのは簡単です。基本的な流れとして、ロジックを書いた PHP ファイルと、デザインを書いたテンプレート HTML ファイルを作成します。</p>\n<p>PHP ファイルには、Smarty ライブラリを include して、そこにユーザに見せる値とか、データベースから SELECT した内容などを登録します。一方、テンプレート（HTML）には、デザインを書いて、値を嵌め込めば OK です。また、if/for/foreach 文も記述できます。</p>\n<p>では、実際に使ってみます。</p>\n<h2>Smarty の環境準備</h2>\n<p>PHP の環境は、ローカル環境 <a href=\"http://rakuishi.com/archives/6299/\">MAMP</a> で用意しています。</p>\n<p><a href=\"http://www.smarty.net/\">Smarty の公式サイト</a> からライブラリをダウンロードします。解凍して、その中の lib フォルダを作業ディレクトリに置きます。</p>\n<p>また、作業ディレクトに templates, templates_c フォルダ、sample.php を置きます。また、templates フォルダ以下に sample.html を置きます。templates_c フォルダは、キャッシュファイルが自動で格納される場所です。このキャッシュファイルはコンパイル結果が格納されており、これが再利用されます。サーバーで実行する場合、ディレクトリに書き込み権限を与える必要があります。</p>\n<p><img src=\"/images/2013/12/6365_1.png\" alt=\"\"></p>\n<h2>簡単なコードで Smarty を使う</h2>\n<p>では、ロジック部分に当たる sample.php に以下の内容を記述します。</p>\n<p>$smarty にファイルの場所を教えて、assign で変数名（hello）に値（Hello World）を割り当て、テンプレートファイルを表示（display）させています。ここには html タグなどは記述しません。</p>\n<pre><code>&lt;?php\n\nrequire_once(&quot;libs/Smarty.class.php&quot;);\n\n$smarty = new Smarty();\n$smarty-&gt;template_dir = &quot;templates/&quot;;\n$smarty-&gt;compile_dir = &quot;templates_c/&quot;;\n\n// 変数\n$smarty-&gt;assign(&quot;hello&quot;, &quot;Hello World!&quot;);\n\n// 配列\n$objects = array(&quot;北海道&quot;, &quot;青森県&quot;, &quot;秋田県&quot;, &quot;岩手県&quot;, &quot;山形県&quot;);\n$smarty-&gt;assign(&quot;objects&quot;, $objects);\n\n// テンプレートファイルを読み込む\n$smarty-&gt;display('sample.html');\n\n?&gt;\n</code></pre>\n<p>次に、テンプレート部分に当たる sample.html に以下の内容を記述します。</p>\n<p>先ほど登録した値を {$変数名} で呼び出します。foreach も PHP とは異なる書き方ですが、テンプレートファイル内で使用できます。</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;utf-8&quot; /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n{$hello}\n\n  {foreach $objects as $object}\n  * {$object}\n  {/foreach}\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>sample.php をブラウザから確認すると以下のように表示されます。ロジック部分とテンプレート部分を綺麗に分離したコードがうまく動作しているのが確認できます。</p>\n<p><img src=\"/images/2013/12/6365_2.png\" alt=\"\"></p>\n<p>以上、テンプレートエンジン Smarty の環境準備／簡単なコードによる動作を紹介しました。</p>\n",
  "dir": "static/content/archives",
  "base": "2013-12-22-6365.json",
  "ext": ".json",
  "sourceBase": "2013-12-22-6365.md",
  "sourceExt": ".md"
}