{
  "categories": [
    "WordPress"
  ],
  "date": "2013-09-01T13:04:07.000Z",
  "draft": false,
  "slug": 6161,
  "title": "[WordPress] 間違って記事を公開しないように、「公開」ボタンを押した後に確認アラートを入れる",
  "bodyContent": "公式プラグイン化しました。&rarr; [記事公開前に確認アラートを表示する「One Step Before Publishing」が WordPress プラグインディレクトリに掲載されました · rakuishi.com](http://rakuishi.com/archives/6736)\n\nWordPress で記事をしこしこ書いて、下書きとして保存しようとした時に、間違って記事を「公開」してしまった経験は誰でもあると思います。\n\nこれは、「下書きとして保存」ボタンよりも「公開」ボタンが青く強調されているからいけません。例えるならば、剥き出しの非常ベルがそこにある状態です。誰でも押したくなる、よくない設計だと思います。\n\n![](/images/2013/09/6161_1.png)\n\nこの記事では、間違って記事を公開しないように「公開」ボタンを押した後に、一度確認アラートを表示するように WordPress を改造してみます。\n\n## 間違って記事を公開しないように、確認アラートを入れる\n\nWordPress を改造と言いましたが、きちんと WordPress 側で用意された方法に則って修正していきます。\n\n現在、使用しているテーマの「テーマのための関数（functions.php）」を開いて、以下の文章を &lt;? php &gt; 内に記述します。\n\n```\nfunction publish_confirm_admin_print_scripts() {\n\techo <<< EOM\n<script type=\"text/javascript\">\n<!--\nwindow.onload = function() {\n\tvar id = document.getElementById('publish');\n\tif (id.value.indexOf(\"公開\", 0) != -1) {\n\t\tid.onclick = publish_confirm;\n\t}\n}\nfunction publish_confirm() {\n\tif (window.confirm(\"記事を公開してもよろしいですか？\")) {\n\t\treturn true;\n\t} else {\n\t\tvar elements = document.getElementsByTagName('span');\n\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\tvar element = elements[i];\n\t\t\tif (element.className.indexOf(\"spinner\", 0) != -1) {\n\t\t\t\telement.classList.remove('spinner');\n\t\t\t}\n\t\t}\n\t\tdocument.getElementById('publish').classList.remove('button-primary-disabled');\n\t\tdocument.getElementById('save-post').classList.remove('button-disabled');\n\n\t        return false;\n\t}\n}\n// -->\n</script>\nEOM;\n}\n\n// 公開する前にアラートを表示する\nadd_action('admin_print_scripts', 'publish_confirm_admin_print_scripts');\n```\n\n管理画面に JavaScript を追加して記述できる admin_print_scripts のアクションをフックして、新しくアラートを表示するための JavaScript を記述しています。\n\n「公開」ボタン（id=\"publish\"）が押された後に、記事を公開してもよいかどうかの確認アラートを表示するようにしています。\n\nキャンセルした際に、色々とクラスを削除していますが、こちらは、ボタンを押せないように見せるクラスやローディングアニメーションのクラスを削除する処理となっています。\n\n![](/images/2013/09/6161_2.png)",
  "bodyHtml": "<p>公式プラグイン化しました。→ <a href=\"http://rakuishi.com/archives/6736\">記事公開前に確認アラートを表示する「One Step Before Publishing」が WordPress プラグインディレクトリに掲載されました · rakuishi.com</a></p>\n<p>WordPress で記事をしこしこ書いて、下書きとして保存しようとした時に、間違って記事を「公開」してしまった経験は誰でもあると思います。</p>\n<p>これは、「下書きとして保存」ボタンよりも「公開」ボタンが青く強調されているからいけません。例えるならば、剥き出しの非常ベルがそこにある状態です。誰でも押したくなる、よくない設計だと思います。</p>\n<p><img src=\"/images/2013/09/6161_1.png\" alt=\"\"></p>\n<p>この記事では、間違って記事を公開しないように「公開」ボタンを押した後に、一度確認アラートを表示するように WordPress を改造してみます。</p>\n<h2>間違って記事を公開しないように、確認アラートを入れる</h2>\n<p>WordPress を改造と言いましたが、きちんと WordPress 側で用意された方法に則って修正していきます。</p>\n<p>現在、使用しているテーマの「テーマのための関数（functions.php）」を開いて、以下の文章を &lt;? php &gt; 内に記述します。</p>\n<pre><code>function publish_confirm_admin_print_scripts() {\n\techo &lt;&lt;&lt; EOM\n&lt;script type=&quot;text/javascript&quot;&gt;\n&lt;!--\nwindow.onload = function() {\n\tvar id = document.getElementById('publish');\n\tif (id.value.indexOf(&quot;公開&quot;, 0) != -1) {\n\t\tid.onclick = publish_confirm;\n\t}\n}\nfunction publish_confirm() {\n\tif (window.confirm(&quot;記事を公開してもよろしいですか？&quot;)) {\n\t\treturn true;\n\t} else {\n\t\tvar elements = document.getElementsByTagName('span');\n\t\tfor (var i = 0; i &lt; elements.length; i++) {\n\t\t\tvar element = elements[i];\n\t\t\tif (element.className.indexOf(&quot;spinner&quot;, 0) != -1) {\n\t\t\t\telement.classList.remove('spinner');\n\t\t\t}\n\t\t}\n\t\tdocument.getElementById('publish').classList.remove('button-primary-disabled');\n\t\tdocument.getElementById('save-post').classList.remove('button-disabled');\n\n\t        return false;\n\t}\n}\n// --&gt;\n&lt;/script&gt;\nEOM;\n}\n\n// 公開する前にアラートを表示する\nadd_action('admin_print_scripts', 'publish_confirm_admin_print_scripts');\n</code></pre>\n<p>管理画面に JavaScript を追加して記述できる admin_print_scripts のアクションをフックして、新しくアラートを表示するための JavaScript を記述しています。</p>\n<p>「公開」ボタン（id=&quot;publish&quot;）が押された後に、記事を公開してもよいかどうかの確認アラートを表示するようにしています。</p>\n<p>キャンセルした際に、色々とクラスを削除していますが、こちらは、ボタンを押せないように見せるクラスやローディングアニメーションのクラスを削除する処理となっています。</p>\n<p><img src=\"/images/2013/09/6161_2.png\" alt=\"\"></p>\n",
  "dir": "static/content/archives",
  "base": "2013-09-01-6161.json",
  "ext": ".json",
  "sourceBase": "2013-09-01-6161.md",
  "sourceExt": ".md"
}