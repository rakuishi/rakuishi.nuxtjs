{
  "categories": [
    "OS X"
  ],
  "date": "2013-02-09T05:18:51.000Z",
  "draft": false,
  "slug": 5535,
  "title": "NSTableView にデータを表示させる方法",
  "bodyContent": "iOS でアプリを作る際に一番利用していたパーツは、UITableView だったので、OSX でも同様の NSTableView の使用頻度が高いと思います。\n\nというわけで、この記事では、NSTableView の基本的な使い方を紹介します。\n\n## 新規プロジェクトの作成\n\nXCode 起動 → 新規プロジェクト作成 → OSX → Application → Cocoa Application で、適当なファイル名を付けて、適当なところに置きます。\n\nそして、テーブルを管理するために用いる NSObject のサブクラスを追加します（ここでは、RKTableViewController と名付けました）。\n\n## NSTableView に値を設定する最低限の実装\n\nNSTableView に値を設定するには、NSTableView data source のメソッドをオーバーライドする必要があります。最低限、必要なのは、以下の2つのメソッドです。\n\n```\n- (NSInteger)numberOfRowsInTableView:(NSTableView *)aTableView\n\n- (id)tableView:(NSTableView *)aTableView objectValueForTableColumn:(NSTableColumn *)aTableColumn row:(NSInteger)rowIndex\n```\n\niOS の UITableView と似た感じですね。ただ iOS と違って、列と行を扱う必要があります。行（row）は分かりますが、列（column）の区別はどうするのか？それには、NSTableColumn の固有名（identifier）を比較して、区別します。\n\nこの identifier は、xib ファイルから変更することが出来ます。\n\n## MainMenu.xib をぺたぺたいじる\n\nObject Library から、\"Table View\" を Window の下の View の上に適当に載せます。そして、\"Object\" を \"Objects\" に加えます。\"Object\" の Custom Class の Class に \"RKTableViewController\" を登録します。\n\n![](/images/2013/02/5535_1.png)\n\nそして、\"RKTableViewController\" が Table View のデータを変更できるように（NSTableView data source のメソッドをオーバーライドできるように）、Outlet で接続します。左クリックから線を結べます。\n\n![](/images/2013/02/5535_2.png)\n\nそして、列（Column）の区別をするために、列に名前を付けておきます。NSTableColumn の Identifier に \"TITLE\" と \"DESCRIPTION\" と名付けます。\n\n![](/images/2013/02/5535_3.png)\n\nさて、ここからは、RKTableViewController で、NSTableView data source のメソッドをオーバーライドするだけです。\n\n## NSTableView data source のメソッドをオーバーライドする\n\nRKTableViewController.m に以下の内容を記述しました。_dataArray に表示させるデータを用意して、それを表示させています。後は、Column の Identifier ごとに返す値を変えれば OK です。\n\n```\n#import \"RKTableViewController.h\"\n\n@implementation RKTableViewController {\n    \n    NSMutableArray *_dataArray;\n}\n\n- (id)init\n{\n    self = [super init];\n    if (self) {\n        NSLog(@\"%s\", __func__);\n        \n        _dataArray = [[NSMutableArray alloc] init];\n        for (int i = 0; i < 10; i++) {\n            NSDictionary *data = @{@\"title\": [NSString stringWithFormat:@\"title-%d\", i],\n                                   @\"description\": [NSString stringWithFormat:@\"description-%d\", i]};\n            [_dataArray addObject:data];\n        }\n    }\n    return self;\n}\n\n#pragma mark - NSTableView data source\n\n- (NSInteger)numberOfRowsInTableView:(NSTableView*)tableView\n{\n    NSLog(@\"%s\", __func__);\n    \n    return _dataArray.count;\n}\n\n- (id)tableView:(NSTableView *)tableView objectValueForTableColumn:(NSTableColumn *)tableColumn row:(NSInteger)row\n{\n    NSLog(@\"%s\", __func__);\n    \n    NSDictionary *data = [_dataArray objectAtIndex:row];\n    if ([[tableColumn identifier] isEqualToString:@\"TITLE\"]) {\n        return [data objectForKey:@\"title\"];\n    } else {\n        return [data objectForKey:@\"description\"];\n    }\n}\n```\n\n## 実行結果\n\n以下のように NSTableView にデータが表示できています。やったね！\n\n![](/images/2013/02/5535_4.png)\n\n参考：[NSTableViewDataSource Protocol Reference](https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ApplicationKit/Protocols/NSTableDataSource_Protocol/Reference/Reference.html)",
  "bodyHtml": "<p>iOS でアプリを作る際に一番利用していたパーツは、UITableView だったので、OSX でも同様の NSTableView の使用頻度が高いと思います。</p>\n<p>というわけで、この記事では、NSTableView の基本的な使い方を紹介します。</p>\n<h2>新規プロジェクトの作成</h2>\n<p>XCode 起動 → 新規プロジェクト作成 → OSX → Application → Cocoa Application で、適当なファイル名を付けて、適当なところに置きます。</p>\n<p>そして、テーブルを管理するために用いる NSObject のサブクラスを追加します（ここでは、RKTableViewController と名付けました）。</p>\n<h2>NSTableView に値を設定する最低限の実装</h2>\n<p>NSTableView に値を設定するには、NSTableView data source のメソッドをオーバーライドする必要があります。最低限、必要なのは、以下の2つのメソッドです。</p>\n<pre><code>- (NSInteger)numberOfRowsInTableView:(NSTableView *)aTableView\n\n- (id)tableView:(NSTableView *)aTableView objectValueForTableColumn:(NSTableColumn *)aTableColumn row:(NSInteger)rowIndex\n</code></pre>\n<p>iOS の UITableView と似た感じですね。ただ iOS と違って、列と行を扱う必要があります。行（row）は分かりますが、列（column）の区別はどうするのか？それには、NSTableColumn の固有名（identifier）を比較して、区別します。</p>\n<p>この identifier は、xib ファイルから変更することが出来ます。</p>\n<h2>MainMenu.xib をぺたぺたいじる</h2>\n<p>Object Library から、&quot;Table View&quot; を Window の下の View の上に適当に載せます。そして、&quot;Object&quot; を &quot;Objects&quot; に加えます。&quot;Object&quot; の Custom Class の Class に &quot;RKTableViewController&quot; を登録します。</p>\n<p><img src=\"/images/2013/02/5535_1.png\" alt=\"\"></p>\n<p>そして、&quot;RKTableViewController&quot; が Table View のデータを変更できるように（NSTableView data source のメソッドをオーバーライドできるように）、Outlet で接続します。左クリックから線を結べます。</p>\n<p><img src=\"/images/2013/02/5535_2.png\" alt=\"\"></p>\n<p>そして、列（Column）の区別をするために、列に名前を付けておきます。NSTableColumn の Identifier に &quot;TITLE&quot; と &quot;DESCRIPTION&quot; と名付けます。</p>\n<p><img src=\"/images/2013/02/5535_3.png\" alt=\"\"></p>\n<p>さて、ここからは、RKTableViewController で、NSTableView data source のメソッドをオーバーライドするだけです。</p>\n<h2>NSTableView data source のメソッドをオーバーライドする</h2>\n<p>RKTableViewController.m に以下の内容を記述しました。_dataArray に表示させるデータを用意して、それを表示させています。後は、Column の Identifier ごとに返す値を変えれば OK です。</p>\n<pre><code>#import &quot;RKTableViewController.h&quot;\n\n@implementation RKTableViewController {\n    \n    NSMutableArray *_dataArray;\n}\n\n- (id)init\n{\n    self = [super init];\n    if (self) {\n        NSLog(@&quot;%s&quot;, __func__);\n        \n        _dataArray = [[NSMutableArray alloc] init];\n        for (int i = 0; i &lt; 10; i++) {\n            NSDictionary *data = @{@&quot;title&quot;: [NSString stringWithFormat:@&quot;title-%d&quot;, i],\n                                   @&quot;description&quot;: [NSString stringWithFormat:@&quot;description-%d&quot;, i]};\n            [_dataArray addObject:data];\n        }\n    }\n    return self;\n}\n\n#pragma mark - NSTableView data source\n\n- (NSInteger)numberOfRowsInTableView:(NSTableView*)tableView\n{\n    NSLog(@&quot;%s&quot;, __func__);\n    \n    return _dataArray.count;\n}\n\n- (id)tableView:(NSTableView *)tableView objectValueForTableColumn:(NSTableColumn *)tableColumn row:(NSInteger)row\n{\n    NSLog(@&quot;%s&quot;, __func__);\n    \n    NSDictionary *data = [_dataArray objectAtIndex:row];\n    if ([[tableColumn identifier] isEqualToString:@&quot;TITLE&quot;]) {\n        return [data objectForKey:@&quot;title&quot;];\n    } else {\n        return [data objectForKey:@&quot;description&quot;];\n    }\n}\n</code></pre>\n<h2>実行結果</h2>\n<p>以下のように NSTableView にデータが表示できています。やったね！</p>\n<p><img src=\"/images/2013/02/5535_4.png\" alt=\"\"></p>\n<p>参考：<a href=\"https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ApplicationKit/Protocols/NSTableDataSource_Protocol/Reference/Reference.html\">NSTableViewDataSource Protocol Reference</a></p>\n",
  "dir": "static/content/archives",
  "base": "2013-02-09-5535.json",
  "ext": ".json",
  "sourceBase": "2013-02-09-5535.md",
  "sourceExt": ".md"
}