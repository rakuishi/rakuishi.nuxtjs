{
  "categories": [
    "Android"
  ],
  "date": "2013-06-29T00:48:18.000Z",
  "draft": false,
  "slug": 5768,
  "title": "[Android Studio] .jar ファイルをインポートする",
  "bodyContent": "Android Studio で外部ライブラリ（.jar）をインポートするのに手間取ったのでメモします。インポートしたのは、[Asynchronous Http Client](http://loopj.com/android-async-http/) という非同期通信を行えるライブラリ。\n\n動作環境：Android Studio (I/O Preview) AI-130.687321\n\n## .jar ファイルをインポートする方法\n\n## 1. libs に .jar ファイルを置く\n\nプロジェクトファイル（プロジェクト名+Project）/プロジェクト名/libs/ に、外部ライブラリを置く。置くと自動的に、Android Studio のプロジェクトから見れるようになる。\n\n![](/images/2013/06/5768_1.png)\n\n## 2. build.gradle に記述する\n\nbuild.gradle に、先ほど追加したライブラリへのパスを記述する。build.gradle は、プロジェクトの作成時に2つ生成されるが、プロジェクトファイル（プロジェクト名+Project）/プロジェクト名/build.gradle を編集する。\n\ndependencies に compile files('libs/android-async-http-1.4.3.jar') を記述した。\n\n```\ndependencies {\n    compile files('libs/android-support-v4.jar')\n    compile files('libs/android-async-http-1.4.3.jar')\n}\n```\n\n## 3. クリーンビルドする\n\nこのままでは、ライブラリを見つけてくれないようなので、クリーンビルドを行う。「Sync Project with Gradle Files」と表示されるアイコンをクリックする。ウィンドウが表示されて、処理が走る。\n\n![](/images/2013/06/5768_2.png)\n\n## 4. ライブラリを使用する\n\n後は、ライブラリをインポートして、処理を書いていく。\n\n```\npackage com.example.sampleapplication;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport com.loopj.android.http.*;\n\npublic class MainActivity extends Activity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        AsyncHttpClient client = new AsyncHttpClient();\n        client.get(\"http://rakuishi.com\", new AsyncHttpResponseHandler() {\n            @Override\n            public void onSuccess(String response) {\n                System.out.println(response);\n            }\n        });\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n\n}\n```\n\nこのライブラリの問題だが、何故か Android Studio では onSuccess が呼ばれないようだ。他にオーバーライドできる onStart, onFinish は呼ばれるのに。何故だろう。\n\n参考：[Request not callback onSuccess() handler · Issue #86 · loopj/android-async-http · GitHub](https://github.com/loopj/android-async-http/issues/86)\n\n追記：AndroidManifest.xml にインターネットの使用許可を出せば、OK でした。\n\n```\n<uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\n```",
  "bodyHtml": "<p>Android Studio で外部ライブラリ（.jar）をインポートするのに手間取ったのでメモします。インポートしたのは、<a href=\"http://loopj.com/android-async-http/\">Asynchronous Http Client</a> という非同期通信を行えるライブラリ。</p>\n<p>動作環境：Android Studio (I/O Preview) AI-130.687321</p>\n<h2>.jar ファイルをインポートする方法</h2>\n<h2>1. libs に .jar ファイルを置く</h2>\n<p>プロジェクトファイル（プロジェクト名+Project）/プロジェクト名/libs/ に、外部ライブラリを置く。置くと自動的に、Android Studio のプロジェクトから見れるようになる。</p>\n<p><img src=\"/images/2013/06/5768_1.png\" alt=\"\"></p>\n<h2>2. build.gradle に記述する</h2>\n<p>build.gradle に、先ほど追加したライブラリへのパスを記述する。build.gradle は、プロジェクトの作成時に2つ生成されるが、プロジェクトファイル（プロジェクト名+Project）/プロジェクト名/build.gradle を編集する。</p>\n<p>dependencies に compile files('libs/android-async-http-1.4.3.jar') を記述した。</p>\n<pre><code>dependencies {\n    compile files('libs/android-support-v4.jar')\n    compile files('libs/android-async-http-1.4.3.jar')\n}\n</code></pre>\n<h2>3. クリーンビルドする</h2>\n<p>このままでは、ライブラリを見つけてくれないようなので、クリーンビルドを行う。「Sync Project with Gradle Files」と表示されるアイコンをクリックする。ウィンドウが表示されて、処理が走る。</p>\n<p><img src=\"/images/2013/06/5768_2.png\" alt=\"\"></p>\n<h2>4. ライブラリを使用する</h2>\n<p>後は、ライブラリをインポートして、処理を書いていく。</p>\n<pre><code>package com.example.sampleapplication;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport com.loopj.android.http.*;\n\npublic class MainActivity extends Activity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        AsyncHttpClient client = new AsyncHttpClient();\n        client.get(&quot;http://rakuishi.com&quot;, new AsyncHttpResponseHandler() {\n            @Override\n            public void onSuccess(String response) {\n                System.out.println(response);\n            }\n        });\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n\n}\n</code></pre>\n<p>このライブラリの問題だが、何故か Android Studio では onSuccess が呼ばれないようだ。他にオーバーライドできる onStart, onFinish は呼ばれるのに。何故だろう。</p>\n<p>参考：<a href=\"https://github.com/loopj/android-async-http/issues/86\">Request not callback onSuccess() handler · Issue #86 · loopj/android-async-http · GitHub</a></p>\n<p>追記：AndroidManifest.xml にインターネットの使用許可を出せば、OK でした。</p>\n<pre><code>&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;&gt;&lt;/uses-permission&gt;\n</code></pre>\n",
  "dir": "static/content/archives",
  "base": "2013-06-29-5768.json",
  "ext": ".json",
  "sourceBase": "2013-06-29-5768.md",
  "sourceExt": ".md"
}