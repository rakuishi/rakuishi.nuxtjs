{
  "categories": [
    "Mac"
  ],
  "date": "2015-02-15T02:32:16.000Z",
  "draft": false,
  "slug": "alfred-terminal-workflow",
  "title": "現在 Finder で表示しているフォルダ位置を Terminal で開く Alfred WorkFlow を作りました",
  "bodyContent": "ランチャーアプリ Alfred の Powerpack を買うと、ユーザーが組んだスクリプト（Workflow）を動かすことができる。以前から自分も作ってみようと思っていたが、どこから手を付ければよいかよく分からなった。\n\nそんな折、Workflow をまとめた [GitHub リポジトリ](https://github.com/zenorocha/alfred-workflows) を発見した。これらの中身を覗きながら、自分でも作ってみた。\n\n## Alfred Terminal WorkFlow\n\n現在 Finder で表示しているフォルダ位置を Terminal で開く Workflow を作った。\n\n* [rakuishi/alfred-terminal-workflow](https://github.com/rakuishi/alfred-terminal-workflow)\n\n以下のスクリーンキャストを見ると動作がわかりやすいと思う。\n\n![](https://raw.githubusercontent.com/rakuishi/static/master/images/alfred-terminal-workflow.gif)\n\nFinder を開いていて、Alfred 上に `terminal` と入力することで Terminal を起動するようにしている。ダウンロードは[ここから](https://github.com/rakuishi/alfred-terminal-workflow/blob/master/Terminal.alfredworkflow?raw=true)、もしくは[リポジトリ](https://github.com/rakuishi/alfred-terminal-workflow)をクローンする。\n\nダウンロードした Terminal.alfredworkflow を起動すれば、インストールされる。\n\n## Alfred Workflow でしていること\n\n実際には、Alfred 内で以下の AppleScript を呼び出している。\n\n\ton alfred_script(q)\n\t\ttell application \"Finder\"\n\t\t\tset selections to selection\n\t\t\tif ((count of selections) > 0) then\n\t\t\t\tset myPath to (quoted form of POSIX path of (item 1 of selections as alias))\n\t\t\t\ttell application \"Terminal\"\n\t\t\t\t\tactivate\n\t\t\t\t\ttell window 1\n\t\t\t\t\t\tdo script \"cd $(dirname \" & myPath & \"); clear\"\n\t\t\t\t\tend tell\n\t\t\t\tend tell\n\t\t\tend if\n\t\tend tell\n\tend alfred_script\n\n多くの Workflow は、決めたコマンドで起動し、シェルスクリプト／AppleScript／PHP／Ruby／Python／Perl などを走らせ、その結果に応じて、コピーしたり起動したりサイトを開いたりという処理を行っている。\n\nPHP などの言語は、Workflow 用のライブラリを読みこめば OK のようだった。アイデアがあれば、次は AppleScript 以外で書いてみたい。",
  "bodyHtml": "<p>ランチャーアプリ Alfred の Powerpack を買うと、ユーザーが組んだスクリプト（Workflow）を動かすことができる。以前から自分も作ってみようと思っていたが、どこから手を付ければよいかよく分からなった。</p>\n<p>そんな折、Workflow をまとめた <a href=\"https://github.com/zenorocha/alfred-workflows\">GitHub リポジトリ</a> を発見した。これらの中身を覗きながら、自分でも作ってみた。</p>\n<h2>Alfred Terminal WorkFlow</h2>\n<p>現在 Finder で表示しているフォルダ位置を Terminal で開く Workflow を作った。</p>\n<ul>\n<li><a href=\"https://github.com/rakuishi/alfred-terminal-workflow\">rakuishi/alfred-terminal-workflow</a></li>\n</ul>\n<p>以下のスクリーンキャストを見ると動作がわかりやすいと思う。</p>\n<p><img src=\"https://raw.githubusercontent.com/rakuishi/static/master/images/alfred-terminal-workflow.gif\" alt=\"\"></p>\n<p>Finder を開いていて、Alfred 上に <code>terminal</code> と入力することで Terminal を起動するようにしている。ダウンロードは<a href=\"https://github.com/rakuishi/alfred-terminal-workflow/blob/master/Terminal.alfredworkflow?raw=true\">ここから</a>、もしくは<a href=\"https://github.com/rakuishi/alfred-terminal-workflow\">リポジトリ</a>をクローンする。</p>\n<p>ダウンロードした Terminal.alfredworkflow を起動すれば、インストールされる。</p>\n<h2>Alfred Workflow でしていること</h2>\n<p>実際には、Alfred 内で以下の AppleScript を呼び出している。</p>\n<pre><code>on alfred_script(q)\n\ttell application &quot;Finder&quot;\n\t\tset selections to selection\n\t\tif ((count of selections) &gt; 0) then\n\t\t\tset myPath to (quoted form of POSIX path of (item 1 of selections as alias))\n\t\t\ttell application &quot;Terminal&quot;\n\t\t\t\tactivate\n\t\t\t\ttell window 1\n\t\t\t\t\tdo script &quot;cd $(dirname &quot; &amp; myPath &amp; &quot;); clear&quot;\n\t\t\t\tend tell\n\t\t\tend tell\n\t\tend if\n\tend tell\nend alfred_script\n</code></pre>\n<p>多くの Workflow は、決めたコマンドで起動し、シェルスクリプト／AppleScript／PHP／Ruby／Python／Perl などを走らせ、その結果に応じて、コピーしたり起動したりサイトを開いたりという処理を行っている。</p>\n<p>PHP などの言語は、Workflow 用のライブラリを読みこめば OK のようだった。アイデアがあれば、次は AppleScript 以外で書いてみたい。</p>\n",
  "dir": "static/content/archives",
  "base": "2015-02-15-alfred-terminal-workflow.json",
  "ext": ".json",
  "sourceBase": "2015-02-15-alfred-terminal-workflow.md",
  "sourceExt": ".md"
}