{
  "categories": [
    "Android"
  ],
  "date": "2014-06-07T03:17:13.000Z",
  "draft": false,
  "slug": 6609,
  "title": "[Android] Fragment をタブで切り替える FragmentTabHost を使う",
  "bodyContent": "タブが実装できる TabHost は、Android 3.0 以降は非推奨となり、FragmentTabHost を使う必要があります。TabHost では、Activity を TabHost に追加していましたが、FragmentTabHost では、Fragment を追加して使います。\n\n![](/images/2014/06/6609_1.png)\n\nこの記事では、Android Studio で FragmentTabHost を使う方法を紹介します。\n\n## v4 support library の導入\n\nFragment を使うために、v4 support library を導入する必要があります。\n\nメニュー → Tools → Android → SDK Manager から Android Support Repository をインストールします。\n\nProject Structure（command + ;）→ Module → プロジェクト名 → Dependencies → + → Library dependency から、com.android.support:support-v4:+ を追加する。[Apply] → [OK] で自動的に、gradle の sync が始まり、成功したら OK です。\n\n## Fragment\n\nFragment を用意します。Fragment は、ビューとロジックを持ち、それらをひとつのものとして扱えるものです。単なるカスタムビューとは異なり、フラグメント自身もライフサイクルを持ち、さらにアクティビティのライフサイクルと同期しています。\n\nProject 上で、副クリック → New → Android（Other）から Fragment を簡単に追加出来ます。以下に用意した Fragment のレイアウトとロジックは、標準で準備されるものから必要なものだけを残しました。\n\n・fragment_sample.xml\n\n```\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  xmlns:tools=\"http://schemas.android.com/tools\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  tools:context=\"com.rakuishi.fragment.fragment.SampleFragment\">\n\n  <TextView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:text=\"Hello World!\" />\n\n</FrameLayout>\n```\n\n・SampleFragment.java\n\n```\npackage com.rakuishi.fragment.fragment;\n\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\npublic class SampleFragment extends Fragment {\n\n  @Override\n  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n               Bundle savedInstanceState) {\n    // Inflate the layout for this fragment\n    return inflater.inflate(R.layout.fragment_sample, container, false);\n  }\n}\n```\n\n## Fragment を扱う Activity\n\nFragmentTabHost に、TabWidget（id/tabs）と FrameLayout（id/tabcontent）が紐付きます。TabWidget と FrameLayout は、id 固定で必須です。FrameLayout（id/container）に Fragment が入ります。\n\n・activity_main.xml\n\n```\n<android.support.v4.app.FragmentTabHost\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:id=\"@android:id/tabhost\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\">\n\n  <LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TabWidget\n      android:id=\"@android:id/tabs\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      android:layout_weight=\"0\" />\n\n      <FrameLayout\n        android:id=\"@android:id/tabcontent\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"0\" />\n\n      <FrameLayout\n        android:id=\"@+id/container\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\" />\n\n    </LinearLayout>\n\n</android.support.v4.app.FragmentTabHost>\n```\n\nFragmentTabHost を `setup()` し、実際に表示するタブ TabSpec を追加 `addTab()` していきます。`addTab()` する際には、TabSpec, Fragment, Fragment に渡す値を指定できます。ここでは特に渡す必要がないので `null` としています。\n\n・MainActivity.java\n\n```\npackage com.rakuishi.fragment.fragment;\n\nimport android.os.Bundle;\nimport android.support.v4.app.FragmentActivity;\nimport android.support.v4.app.FragmentTabHost;\nimport android.util.Log;\nimport android.widget.TabHost;\n\npublic class MainActivity extends FragmentActivity implements FragmentTabHost.OnTabChangeListener {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    // FragmentTabHost を取得する\n    FragmentTabHost tabHost = (FragmentTabHost)findViewById(android.R.id.tabhost);\n    tabHost.setup(this, getSupportFragmentManager(), R.id.container);\n\n    TabHost.TabSpec tabSpec1, tabSpec2;\n\n    // TabSpec を生成する\n    tabSpec1 = tabHost.newTabSpec(\"tab1\");\n    tabSpec1.setIndicator(\"tab1\");\n    // TabHost に追加\n    tabHost.addTab(tabSpec1, SampleFragment.class, null);\n\n    // TabSpec を生成する\n    tabSpec2 = tabHost.newTabSpec(\"tab2\");\n    tabSpec2.setIndicator(\"tab2\");\n    // TabHost に追加\n    tabHost.addTab(tabSpec2, SampleFragment.class, null);\n\n    // リスナー登録\n    tabHost.setOnTabChangedListener(this);\n  }\n\n  @Override\n  public void onTabChanged(String tabId) {\n    Log.d(\"onTabChanged\", \"tabId: \" + tabId);\n  }\n}\n```",
  "bodyHtml": "<p>タブが実装できる TabHost は、Android 3.0 以降は非推奨となり、FragmentTabHost を使う必要があります。TabHost では、Activity を TabHost に追加していましたが、FragmentTabHost では、Fragment を追加して使います。</p>\n<p><img src=\"/images/2014/06/6609_1.png\" alt=\"\"></p>\n<p>この記事では、Android Studio で FragmentTabHost を使う方法を紹介します。</p>\n<h2>v4 support library の導入</h2>\n<p>Fragment を使うために、v4 support library を導入する必要があります。</p>\n<p>メニュー → Tools → Android → SDK Manager から Android Support Repository をインストールします。</p>\n<p>Project Structure（command + ;）→ Module → プロジェクト名 → Dependencies → + → Library dependency から、com.android.support:support-v4:+ を追加する。[Apply] → [OK] で自動的に、gradle の sync が始まり、成功したら OK です。</p>\n<h2>Fragment</h2>\n<p>Fragment を用意します。Fragment は、ビューとロジックを持ち、それらをひとつのものとして扱えるものです。単なるカスタムビューとは異なり、フラグメント自身もライフサイクルを持ち、さらにアクティビティのライフサイクルと同期しています。</p>\n<p>Project 上で、副クリック → New → Android（Other）から Fragment を簡単に追加出来ます。以下に用意した Fragment のレイアウトとロジックは、標準で準備されるものから必要なものだけを残しました。</p>\n<p>・fragment_sample.xml</p>\n<pre><code>&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  tools:context=&quot;com.rakuishi.fragment.fragment.SampleFragment&quot;&gt;\n\n  &lt;TextView\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:text=&quot;Hello World!&quot; /&gt;\n\n&lt;/FrameLayout&gt;\n</code></pre>\n<p>・SampleFragment.java</p>\n<pre><code>package com.rakuishi.fragment.fragment;\n\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\npublic class SampleFragment extends Fragment {\n\n  @Override\n  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n               Bundle savedInstanceState) {\n    // Inflate the layout for this fragment\n    return inflater.inflate(R.layout.fragment_sample, container, false);\n  }\n}\n</code></pre>\n<h2>Fragment を扱う Activity</h2>\n<p>FragmentTabHost に、TabWidget（id/tabs）と FrameLayout（id/tabcontent）が紐付きます。TabWidget と FrameLayout は、id 固定で必須です。FrameLayout（id/container）に Fragment が入ります。</p>\n<p>・activity_main.xml</p>\n<pre><code>&lt;android.support.v4.app.FragmentTabHost\n  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  android:id=&quot;@android:id/tabhost&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;&gt;\n\n  &lt;LinearLayout\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:orientation=&quot;vertical&quot;&gt;\n\n    &lt;TabWidget\n      android:id=&quot;@android:id/tabs&quot;\n      android:layout_width=&quot;match_parent&quot;\n      android:layout_height=&quot;wrap_content&quot;\n      android:orientation=&quot;horizontal&quot;\n      android:layout_weight=&quot;0&quot; /&gt;\n\n      &lt;FrameLayout\n        android:id=&quot;@android:id/tabcontent&quot;\n        android:layout_width=&quot;0dp&quot;\n        android:layout_height=&quot;0dp&quot;\n        android:layout_weight=&quot;0&quot; /&gt;\n\n      &lt;FrameLayout\n        android:id=&quot;@+id/container&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;0dp&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n\n    &lt;/LinearLayout&gt;\n\n&lt;/android.support.v4.app.FragmentTabHost&gt;\n</code></pre>\n<p>FragmentTabHost を <code>setup()</code> し、実際に表示するタブ TabSpec を追加 <code>addTab()</code> していきます。<code>addTab()</code> する際には、TabSpec, Fragment, Fragment に渡す値を指定できます。ここでは特に渡す必要がないので <code>null</code> としています。</p>\n<p>・MainActivity.java</p>\n<pre><code>package com.rakuishi.fragment.fragment;\n\nimport android.os.Bundle;\nimport android.support.v4.app.FragmentActivity;\nimport android.support.v4.app.FragmentTabHost;\nimport android.util.Log;\nimport android.widget.TabHost;\n\npublic class MainActivity extends FragmentActivity implements FragmentTabHost.OnTabChangeListener {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    // FragmentTabHost を取得する\n    FragmentTabHost tabHost = (FragmentTabHost)findViewById(android.R.id.tabhost);\n    tabHost.setup(this, getSupportFragmentManager(), R.id.container);\n\n    TabHost.TabSpec tabSpec1, tabSpec2;\n\n    // TabSpec を生成する\n    tabSpec1 = tabHost.newTabSpec(&quot;tab1&quot;);\n    tabSpec1.setIndicator(&quot;tab1&quot;);\n    // TabHost に追加\n    tabHost.addTab(tabSpec1, SampleFragment.class, null);\n\n    // TabSpec を生成する\n    tabSpec2 = tabHost.newTabSpec(&quot;tab2&quot;);\n    tabSpec2.setIndicator(&quot;tab2&quot;);\n    // TabHost に追加\n    tabHost.addTab(tabSpec2, SampleFragment.class, null);\n\n    // リスナー登録\n    tabHost.setOnTabChangedListener(this);\n  }\n\n  @Override\n  public void onTabChanged(String tabId) {\n    Log.d(&quot;onTabChanged&quot;, &quot;tabId: &quot; + tabId);\n  }\n}\n</code></pre>\n",
  "dir": "static/content/archives",
  "base": "2014-06-07-6609.json",
  "ext": ".json",
  "sourceBase": "2014-06-07-6609.md",
  "sourceExt": ".md"
}