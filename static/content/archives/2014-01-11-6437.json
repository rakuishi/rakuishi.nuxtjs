{
  "categories": [
    "JavaScript"
  ],
  "date": "2014-01-11T13:15:38.000Z",
  "draft": false,
  "slug": 6437,
  "title": "[jQuery UI] MySQL から取得したデータをドラッグで並び替える",
  "bodyContent": "MySQL から取得したデータを並び替えする時、「↑」とか「↓」の矢印を付けて1レコードずつ並び順を変更していました。これを iOS アプリの UITableView みたいに並び替えできないかなと思っていたら、jQuery UI というライブラリを使用すれば比較的簡単に実装出来るみたいでした。\n\n## jQuery UI とは\n\n[jQuery UI](http://jqueryui.com/) は、高度なユーザインターフェースを実装できるライブラリです。jQuery UI を使用すれば、要素のドラッグ＆ドロップ・リサイズ・選択・並べ替えなどが容易に実装出来ます。\n\n## jQuery UI / PHP で MySQL のデータを並び替える\n\n今回は、[こちらの記事](http://rakuishi.com/archives/6299/)で構築したローカル環境で MySQL と PHP を動作させました。\n\nMySQL に kurage テーブルを作成し、その並び順を変更する php ファイルを例として作成しました。\n\n![](/images/2014/01/6437_1.png)\n\nここからは、実装する上で使用したコードを解説していきます。\n\n## PHP：テーブルの作成、並び順の変更、並び順にデータを取得\n\nテーブルの作成と並び順にデータを取得する部分は、普通だと思うので説明を省きます。並び順を変える部分ですが、こちらは POST で受け取った並び順が格納された `result` がある場合に処理が行われます。\n\nこの並び順データは、後述する jQuery によって生成されるます。\n\n```\n<?php\n\n// データベース接続\nmysql_connect('localhost', 'root', 'root');\nmysql_select_db('database');\nmysql_query('SET NAMES UTF8');\n\n// テーブルが存在しない場合は作成する\nif (mysql_query('SELECT 1 FROM kurage') == FALSE) {\n  $sql = \"CREATE TABLE kurage (id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, name TEXT, sort INT UNSIGNED)\";\n  mysql_query($sql);\n\n  // 初期データを登録する\n  $kurages = array(\"プラヌラ\", \"ポリプ\", \"ストロビラ\", \"エフィラ\", \"稚クラゲ\", \"成体\");\n  for ($i = 0; $i < count($kurages); $i++) {\n    $sql = \"INSERT INTO kurage SET name = '{$kurages[$i]}', sort = '{$i}'\";\n    mysql_query($sql);\n  }  \n}\n\n// 並び順が POST に格納されている場合は、並び順を変える\n$result = $_POST['result'];\nif ($result != NULL) {\n  // データの id が「,」区切りで順番に格納されているデータを配列に変換する\n  $ids = explode(\",\", $result);\n  for ($i = 0; $i < count($ids); $i++) {\n    $id = $ids[$i] + 0;\n    $sql = \"UPDATE kurage SET sort='{$i}' WHERE id='{$id}'\";\n    mysql_query($sql);\n  }\n}\n\n// ソート順にデータを取得する\n$sql = \"SELECT * FROM kurage ORDER BY sort\";\n$recordSet = mysql_query($sql);\nwhile ($data = mysql_fetch_assoc($recordSet)) {\n  $id = $data['id'];\n  $name = $data['name'];\n  $list .= \"<li id=\\\"{$id}\\\">{$name}</li>\";\n}\n\n?>\n```\n\n## jQuery UI：ドラッグ可能なリストを作成する\n\njQuery UI を使用するには、jquery.js → jquery-ui.js の順に js ファイルを読み込みます。`ul` タグに `sortable` を指定し、`$(\"#sortable\").sortable();` にすることでドラッグ可能になります。`ul` タグ内の `li` タグは、先の `$list` 変数に格納されています。\n\n並び順を保存するボタンが押された後、リストの順番を `result` に格納し、送信されます。\n\n```\n<!DOCTYPE>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\" />\n<script src=\"js/jquery-1.9.1.js\"></script>\n<script src=\"js/jquery-ui-1.10.3.custom.js\"></script>\n</head>\n<body>\n\n<h1 style=\"font-size: 18px\">ミズクラゲの生活環</h1>\n\n<ul id=\"sortable\"><?php echo $list; ?></ul>\n\n<form action=\"\" method=\"post\">\n  <input type=\"hidden\" id=\"result\" name=\"result\" />\n  <input type=\"submit\" id=\"submit\" value=\"並び順を保存する\" />\n</form>\n\n<script>\n$(function() {\n  // ソート可能にする\n  $(\"#sortable\").sortable();\n  $(\"#submit\").click(function() {\n    // result に並び順を格納する\n    var result = $(\"#sortable\").sortable(\"toArray\");\n    $(\"#result\").val(result);\n    $(\"form\").submit();\n  });\n});\n</script>\n\n</body>\n</html>\n```\n\n## 参考\n\n* [jQuery UI入門 (全19回) - プログラミングならドットインストール](http://dotinstall.com/lessons/basic_jquery_ui)\n* [MySQLのデータをドラッグで並替（jqueryUI）のメモ - Qiita [キータ]](http://qiita.com/tabo_purify/items/22e202ad4fc64eaec8f6)",
  "bodyHtml": "<p>MySQL から取得したデータを並び替えする時、「↑」とか「↓」の矢印を付けて1レコードずつ並び順を変更していました。これを iOS アプリの UITableView みたいに並び替えできないかなと思っていたら、jQuery UI というライブラリを使用すれば比較的簡単に実装出来るみたいでした。</p>\n<h2>jQuery UI とは</h2>\n<p><a href=\"http://jqueryui.com/\">jQuery UI</a> は、高度なユーザインターフェースを実装できるライブラリです。jQuery UI を使用すれば、要素のドラッグ＆ドロップ・リサイズ・選択・並べ替えなどが容易に実装出来ます。</p>\n<h2>jQuery UI / PHP で MySQL のデータを並び替える</h2>\n<p>今回は、<a href=\"http://rakuishi.com/archives/6299/\">こちらの記事</a>で構築したローカル環境で MySQL と PHP を動作させました。</p>\n<p>MySQL に kurage テーブルを作成し、その並び順を変更する php ファイルを例として作成しました。</p>\n<p><img src=\"/images/2014/01/6437_1.png\" alt=\"\"></p>\n<p>ここからは、実装する上で使用したコードを解説していきます。</p>\n<h2>PHP：テーブルの作成、並び順の変更、並び順にデータを取得</h2>\n<p>テーブルの作成と並び順にデータを取得する部分は、普通だと思うので説明を省きます。並び順を変える部分ですが、こちらは POST で受け取った並び順が格納された <code>result</code> がある場合に処理が行われます。</p>\n<p>この並び順データは、後述する jQuery によって生成されるます。</p>\n<pre><code>&lt;?php\n\n// データベース接続\nmysql_connect('localhost', 'root', 'root');\nmysql_select_db('database');\nmysql_query('SET NAMES UTF8');\n\n// テーブルが存在しない場合は作成する\nif (mysql_query('SELECT 1 FROM kurage') == FALSE) {\n  $sql = &quot;CREATE TABLE kurage (id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, name TEXT, sort INT UNSIGNED)&quot;;\n  mysql_query($sql);\n\n  // 初期データを登録する\n  $kurages = array(&quot;プラヌラ&quot;, &quot;ポリプ&quot;, &quot;ストロビラ&quot;, &quot;エフィラ&quot;, &quot;稚クラゲ&quot;, &quot;成体&quot;);\n  for ($i = 0; $i &lt; count($kurages); $i++) {\n    $sql = &quot;INSERT INTO kurage SET name = '{$kurages[$i]}', sort = '{$i}'&quot;;\n    mysql_query($sql);\n  }  \n}\n\n// 並び順が POST に格納されている場合は、並び順を変える\n$result = $_POST['result'];\nif ($result != NULL) {\n  // データの id が「,」区切りで順番に格納されているデータを配列に変換する\n  $ids = explode(&quot;,&quot;, $result);\n  for ($i = 0; $i &lt; count($ids); $i++) {\n    $id = $ids[$i] + 0;\n    $sql = &quot;UPDATE kurage SET sort='{$i}' WHERE id='{$id}'&quot;;\n    mysql_query($sql);\n  }\n}\n\n// ソート順にデータを取得する\n$sql = &quot;SELECT * FROM kurage ORDER BY sort&quot;;\n$recordSet = mysql_query($sql);\nwhile ($data = mysql_fetch_assoc($recordSet)) {\n  $id = $data['id'];\n  $name = $data['name'];\n  $list .= &quot;&lt;li id=\\&quot;{$id}\\&quot;&gt;{$name}&lt;/li&gt;&quot;;\n}\n\n?&gt;\n</code></pre>\n<h2>jQuery UI：ドラッグ可能なリストを作成する</h2>\n<p>jQuery UI を使用するには、jquery.js → jquery-ui.js の順に js ファイルを読み込みます。<code>ul</code> タグに <code>sortable</code> を指定し、<code>$(&quot;#sortable&quot;).sortable();</code> にすることでドラッグ可能になります。<code>ul</code> タグ内の <code>li</code> タグは、先の <code>$list</code> 変数に格納されています。</p>\n<p>並び順を保存するボタンが押された後、リストの順番を <code>result</code> に格納し、送信されます。</p>\n<pre><code>&lt;!DOCTYPE&gt;\n&lt;html lang=&quot;ja&quot;&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;utf-8&quot; /&gt;\n&lt;script src=&quot;js/jquery-1.9.1.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;js/jquery-ui-1.10.3.custom.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h1 style=&quot;font-size: 18px&quot;&gt;ミズクラゲの生活環&lt;/h1&gt;\n\n&lt;ul id=&quot;sortable&quot;&gt;&lt;?php echo $list; ?&gt;&lt;/ul&gt;\n\n&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;\n  &lt;input type=&quot;hidden&quot; id=&quot;result&quot; name=&quot;result&quot; /&gt;\n  &lt;input type=&quot;submit&quot; id=&quot;submit&quot; value=&quot;並び順を保存する&quot; /&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n$(function() {\n  // ソート可能にする\n  $(&quot;#sortable&quot;).sortable();\n  $(&quot;#submit&quot;).click(function() {\n    // result に並び順を格納する\n    var result = $(&quot;#sortable&quot;).sortable(&quot;toArray&quot;);\n    $(&quot;#result&quot;).val(result);\n    $(&quot;form&quot;).submit();\n  });\n});\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2>参考</h2>\n<ul>\n<li><a href=\"http://dotinstall.com/lessons/basic_jquery_ui\">jQuery UI入門 (全19回) - プログラミングならドットインストール</a></li>\n<li><a href=\"http://qiita.com/tabo_purify/items/22e202ad4fc64eaec8f6\">MySQLのデータをドラッグで並替（jqueryUI）のメモ - Qiita [キータ]</a></li>\n</ul>\n",
  "dir": "static/content/archives",
  "base": "2014-01-11-6437.json",
  "ext": ".json",
  "sourceBase": "2014-01-11-6437.md",
  "sourceExt": ".md"
}