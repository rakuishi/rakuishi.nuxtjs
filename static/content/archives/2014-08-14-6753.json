{
  "categories": [
    "WordPress"
  ],
  "date": "2014-08-13T19:21:43.000Z",
  "draft": false,
  "slug": 6753,
  "title": "[WordPress] カスタムフィールドの登録とその表示方法",
  "bodyContent": "WordPress のカスタムフィールドについて調べてみました。\n\n## カスタムフィールドとは\n\nひとつの記事に紐付く追加データを取り扱うことが出来ます。\n\n例えば、あなたが iPhone アプリを紹介するブログを書いている場合、記事にアプリの識別子を紐付けておけば、HTML タグを貼り付けることなく、WordPress の裏側で自動でリンクを作ることができます。日記ブログだったら、その日の天気情報を紐付けておくのもいいかもしれません。\n\nカスタムフィールドがどのような構造になっているかは、カスタムフィールドの値が格納される `wp_postmeta` テーブルを見るとすぐに理解できます。記事 ID である `post_id` に紐付く、`meta_key` で値を取り出すことが出来ます。\n\n```\n-- Table structure for table `wp_postmeta`\nCREATE TABLE `wp_postmeta` (\n  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',\n  `meta_key` varchar(255) DEFAULT NULL,\n  `meta_value` longtext,\n  PRIMARY KEY (`meta_id`),\n  KEY `post_id` (`post_id`),\n  KEY `meta_key` (`meta_key`)\n);\n```\n\n## カスタムフィールドを追加する\n\nWordPress でカスタムフィールドを追加するには、記事編集画面の [表示オプション] から [カスタムフィールド] にチェックを入れます。\n\n![](/images/2014/08/6753_1.png)\n\n表示されるカスタムフィールドに、名前（meta_key）と値（meta_value）を登録します。\n\n![](/images/2014/08/6753_2.png)\n\n## カスタムフィールドの値をテーマファイルで表示する\n\nカスタムフィールドの値は記事投稿とは違って、自動で出力されるわけではありません。テーマファイルから、カスタムフィールドの値を使うようにプログラムする必要があります。\n\n一番シンプルなのは、記事ループ中に以下のコードを読み込ませる方法です：\n\n```\n<?php the_meta(); ?>\n```\n\nリスト形式で以下のように表示されます：\n\n```\n<li><span class='post-meta-key'>ios_app_id:</span> 725195676</li>\n```\n\nWordPress 3.5 以降なら次のように、キーに紐付く値を取り出すことが出来ます：\n\n```\n<?php\nif (isset($post->ios_app_id)) {\n  $ios_app_id = $post->ios_app_id;\n  echo \"https://itunes.apple.com/jp/app/id{$ios_app_id}?mt=8\";\n}\n?>\n```\n\n## 参考\n\n[カスタムフィールドの使い方 - WordPress Codex 日本語版](http://wpdocs.sourceforge.jp/%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9)",
  "bodyHtml": "<p>WordPress のカスタムフィールドについて調べてみました。</p>\n<h2>カスタムフィールドとは</h2>\n<p>ひとつの記事に紐付く追加データを取り扱うことが出来ます。</p>\n<p>例えば、あなたが iPhone アプリを紹介するブログを書いている場合、記事にアプリの識別子を紐付けておけば、HTML タグを貼り付けることなく、WordPress の裏側で自動でリンクを作ることができます。日記ブログだったら、その日の天気情報を紐付けておくのもいいかもしれません。</p>\n<p>カスタムフィールドがどのような構造になっているかは、カスタムフィールドの値が格納される <code>wp_postmeta</code> テーブルを見るとすぐに理解できます。記事 ID である <code>post_id</code> に紐付く、<code>meta_key</code> で値を取り出すことが出来ます。</p>\n<pre><code>-- Table structure for table `wp_postmeta`\nCREATE TABLE `wp_postmeta` (\n  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',\n  `meta_key` varchar(255) DEFAULT NULL,\n  `meta_value` longtext,\n  PRIMARY KEY (`meta_id`),\n  KEY `post_id` (`post_id`),\n  KEY `meta_key` (`meta_key`)\n);\n</code></pre>\n<h2>カスタムフィールドを追加する</h2>\n<p>WordPress でカスタムフィールドを追加するには、記事編集画面の [表示オプション] から [カスタムフィールド] にチェックを入れます。</p>\n<p><img src=\"/images/2014/08/6753_1.png\" alt=\"\"></p>\n<p>表示されるカスタムフィールドに、名前（meta_key）と値（meta_value）を登録します。</p>\n<p><img src=\"/images/2014/08/6753_2.png\" alt=\"\"></p>\n<h2>カスタムフィールドの値をテーマファイルで表示する</h2>\n<p>カスタムフィールドの値は記事投稿とは違って、自動で出力されるわけではありません。テーマファイルから、カスタムフィールドの値を使うようにプログラムする必要があります。</p>\n<p>一番シンプルなのは、記事ループ中に以下のコードを読み込ませる方法です：</p>\n<pre><code>&lt;?php the_meta(); ?&gt;\n</code></pre>\n<p>リスト形式で以下のように表示されます：</p>\n<pre><code>&lt;li&gt;&lt;span class='post-meta-key'&gt;ios_app_id:&lt;/span&gt; 725195676&lt;/li&gt;\n</code></pre>\n<p>WordPress 3.5 以降なら次のように、キーに紐付く値を取り出すことが出来ます：</p>\n<pre><code>&lt;?php\nif (isset($post-&gt;ios_app_id)) {\n  $ios_app_id = $post-&gt;ios_app_id;\n  echo &quot;https://itunes.apple.com/jp/app/id{$ios_app_id}?mt=8&quot;;\n}\n?&gt;\n</code></pre>\n<h2>参考</h2>\n<p><a href=\"http://wpdocs.sourceforge.jp/%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">カスタムフィールドの使い方 - WordPress Codex 日本語版</a></p>\n",
  "dir": "static/content/archives",
  "base": "2014-08-14-6753.json",
  "ext": ".json",
  "sourceBase": "2014-08-14-6753.md",
  "sourceExt": ".md"
}