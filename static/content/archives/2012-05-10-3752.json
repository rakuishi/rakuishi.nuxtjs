{
  "categories": [
    "Development"
  ],
  "date": "2012-05-10T03:17:42.000Z",
  "draft": false,
  "slug": 3752,
  "title": "Quicka v1.2：画面を広く使える UI に変更・URL スキーム追加機能",
  "bodyContent": "Quicka が ver 1.2 になりました。App Store からアップデートできます。\n\n* 画面を広く使える UI に変更\n* URL スキームによる URL スキーム追加機能\n* その他細かな改善\n\n## 画面を広く使える UI に変更\n\n一番の大きな違いは、画面上部に設置していたバーを下に表示するようにしたことです。\n\n![](/images/2012/05/3752_1.png)\n\nこれで、フリックキーボードで上3つしか表示されていなかったのが、4つになりました。微妙な変化ですが、より使いやすくなります。\n\n編集・追加ボタンは、テーブルビューを下方向にスワイプすると表示されます。\n\n## URL スキームによる追加機能\n\n正直、URL スキームを追加するのは、非常に面倒です。\n\nそこで、Quicka に対応した URL スキームを追加できるページを用意しました。Import を押すとその URL スキームが自動で登録されます。\n\nhttp://rakuishi.com/urlscheme.html\n\n![](/images/2012/05/3752_2.png)\n\nQuicka からも、右下のプラスボタン → Add from Library で、このページにジャンプできます。\n\n例えば、iPhone のブラウザから、次の URL を踏むと Quicka が起動して URL スキームを自動で追加してくれるそんな機能。これは、withEver 1.9 のコールバック機能に対応した URL スキームです。\n\n[Search with withEver](quicka://add?title=Search with withEver&url=withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f)\n\nちなみに、以前の「withever://search?<@>」の方法で、検索ワードの後ろに & が付くという意見・レビューを頂きましたが、あれは、withEver 側の仕様変更によるもので、僕としては対処の仕様がないです。\n\n## URL スキームを公開してくださるブロガーさん向けに\n\nQuicka に URL スキームを登録するための、Qucika の URL スキームは次のような構成となっています。\n\n<pre>quicka://add?title=XXX&url=YYY</code></pre>\n\nXXX と YYY に、各々の値を入れれば Quicka に自動でジャンプします。この場合、XXX というタイトルで、YYY にジャンプする URL スキームになります。\n\nここで注意してもらいたいのが、url にはエンコードしたものを使用するという点。\n\n例えば、登録したいのが、以下の URL スキームである場合。\n\n<pre>withever://search?<@>&callback=quicka://</code></pre>\n\n次のように、エンコードしたものを使用します。\n\n<pre>withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f</code></pre>\n\nなので、URL スキーム全体としては、このようになります。\n\n<pre>\nquicka://add?title=Search with withEver&url=withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f</code></pre>\n\nブログに貼り付ける場合は、a タグを利用して、こんな感じです。\n\n<pre>&lt;a href=&quot;quicka://add?title=Search with withEver&amp;url=withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f&quot;&gt;Search with withEver&lt;/a&gt;</code></pre>\n\nエンコードには、以下のようなエンコード出来るサイトをご利用下さい。\n\n[URL エンコード、デコードもできる UTF8/16 変換ライブラリ [ JavaScript ]](http://user1.matsumoto.ne.jp/~goma/js/utf.html)\n\n## その他細かな改善\n\nURL スキームに # が含まれていた場合に、僕が意図しない変換をしていたことが分かったので、今回のアップデートで修正しました。\n\n例えば、Web の Gmail 検索の URL スキームは、以下となりますが、これが正常にジャンプできるようになりました。\n\n<pre>https://mail.google.com/mail/mu/mp/520/#tl/search/<@></code></pre>\n\niPhone のブラウザで見てる場合は、次の URL を踏むと自動で Quicka に登録されます。\n\n[Search with Gmail](quicka://add?title=Search with Gmail&url=https%3a%2f%2fmail.google.com%2fmail%2fmu%2fmp%2f520%2f%23tl%2fsearch%2f%3c%40%3e)\n\n## 次回のアップデート予定\n\niPad を購入して、実機でテストできるようになりましたので、iPad 対応のユニバーサルアプリ化を予定しています（ブログでも関連した記事をちょこちょこ書いてます）。\n\n今後とも「Quicka」をよろしくお願いします！\n\n{{<app id=\"511606108\" title=\"Quicka 1.2（￥85）\" src=\"http://a3.mzstatic.com/us/r1000/077/Purple/v4/b0/e4/d4/b0e4d451-a255-4321-966a-33ccf6d2ddf4/ibjG3fNt4Phm08ZnZUjx0g-temp-upload.cqnwvlfj.100x100-75.png\">}}",
  "bodyHtml": "<p>Quicka が ver 1.2 になりました。App Store からアップデートできます。</p>\n<ul>\n<li>画面を広く使える UI に変更</li>\n<li>URL スキームによる URL スキーム追加機能</li>\n<li>その他細かな改善</li>\n</ul>\n<h2>画面を広く使える UI に変更</h2>\n<p>一番の大きな違いは、画面上部に設置していたバーを下に表示するようにしたことです。</p>\n<p><img src=\"/images/2012/05/3752_1.png\" alt=\"\"></p>\n<p>これで、フリックキーボードで上3つしか表示されていなかったのが、4つになりました。微妙な変化ですが、より使いやすくなります。</p>\n<p>編集・追加ボタンは、テーブルビューを下方向にスワイプすると表示されます。</p>\n<h2>URL スキームによる追加機能</h2>\n<p>正直、URL スキームを追加するのは、非常に面倒です。</p>\n<p>そこで、Quicka に対応した URL スキームを追加できるページを用意しました。Import を押すとその URL スキームが自動で登録されます。</p>\n<p>http://rakuishi.com/urlscheme.html</p>\n<p><img src=\"/images/2012/05/3752_2.png\" alt=\"\"></p>\n<p>Quicka からも、右下のプラスボタン → Add from Library で、このページにジャンプできます。</p>\n<p>例えば、iPhone のブラウザから、次の URL を踏むと Quicka が起動して URL スキームを自動で追加してくれるそんな機能。これは、withEver 1.9 のコールバック機能に対応した URL スキームです。</p>\n<p>[Search with withEver](quicka://add?title=Search with withEver&amp;url=withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f)</p>\n<p>ちなみに、以前の「withever://search?&lt;@&gt;」の方法で、検索ワードの後ろに &amp; が付くという意見・レビューを頂きましたが、あれは、withEver 側の仕様変更によるもので、僕としては対処の仕様がないです。</p>\n<h2>URL スキームを公開してくださるブロガーさん向けに</h2>\n<p>Quicka に URL スキームを登録するための、Qucika の URL スキームは次のような構成となっています。</p>\n<p>&lt;pre&gt;quicka://add?title=XXX&amp;url=YYY&lt;/code&gt;&lt;/pre&gt;</p>\n<p>XXX と YYY に、各々の値を入れれば Quicka に自動でジャンプします。この場合、XXX というタイトルで、YYY にジャンプする URL スキームになります。</p>\n<p>ここで注意してもらいたいのが、url にはエンコードしたものを使用するという点。</p>\n<p>例えば、登録したいのが、以下の URL スキームである場合。</p>\n<p>&lt;pre&gt;withever://search?&lt;@&gt;&amp;callback=quicka://&lt;/code&gt;&lt;/pre&gt;</p>\n<p>次のように、エンコードしたものを使用します。</p>\n<p>&lt;pre&gt;withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f&lt;/code&gt;&lt;/pre&gt;</p>\n<p>なので、URL スキーム全体としては、このようになります。</p>\n<p>&lt;pre&gt;\nquicka://add?title=Search with withEver&amp;url=withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f&lt;/code&gt;&lt;/pre&gt;</p>\n<p>ブログに貼り付ける場合は、a タグを利用して、こんな感じです。</p>\n<p>&lt;pre&gt;&lt;a href=&quot;quicka://add?title=Search with withEver&amp;url=withever%3a%2f%2fsearch%3f%3c%40%3e%26callback%3dquicka%3a%2f%2f&quot;&gt;Search with withEver&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;</p>\n<p>エンコードには、以下のようなエンコード出来るサイトをご利用下さい。</p>\n<p><a href=\"http://user1.matsumoto.ne.jp/~goma/js/utf.html\">URL エンコード、デコードもできる UTF8/16 変換ライブラリ [ JavaScript ]</a></p>\n<h2>その他細かな改善</h2>\n<p>URL スキームに # が含まれていた場合に、僕が意図しない変換をしていたことが分かったので、今回のアップデートで修正しました。</p>\n<p>例えば、Web の Gmail 検索の URL スキームは、以下となりますが、これが正常にジャンプできるようになりました。</p>\n<p>&lt;pre&gt;https://mail.google.com/mail/mu/mp/520/#tl/search/&lt;@&gt;&lt;/code&gt;&lt;/pre&gt;</p>\n<p>iPhone のブラウザで見てる場合は、次の URL を踏むと自動で Quicka に登録されます。</p>\n<p>[Search with Gmail](quicka://add?title=Search with Gmail&amp;url=https%3a%2f%2fmail.google.com%2fmail%2fmu%2fmp%2f520%2f%23tl%2fsearch%2f%3c%40%3e)</p>\n<h2>次回のアップデート予定</h2>\n<p>iPad を購入して、実機でテストできるようになりましたので、iPad 対応のユニバーサルアプリ化を予定しています（ブログでも関連した記事をちょこちょこ書いてます）。</p>\n<p>今後とも「Quicka」をよろしくお願いします！</p>\n<p>{{&lt;app id=&quot;511606108&quot; title=&quot;Quicka 1.2（￥85）&quot; src=&quot;http://a3.mzstatic.com/us/r1000/077/Purple/v4/b0/e4/d4/b0e4d451-a255-4321-966a-33ccf6d2ddf4/ibjG3fNt4Phm08ZnZUjx0g-temp-upload.cqnwvlfj.100x100-75.png&quot;&gt;}}</p>\n",
  "dir": "static/content/archives",
  "base": "2012-05-10-3752.json",
  "ext": ".json",
  "sourceBase": "2012-05-10-3752.md",
  "sourceExt": ".md"
}