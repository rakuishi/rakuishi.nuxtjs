{
  "categories": [
    "iOS"
  ],
  "date": "2012-12-09T10:39:44.000Z",
  "draft": false,
  "slug": 5185,
  "title": "[iOS SDK] Tweetbot の設定画面みたいに、アニメーション付きでテーブルビューのデータを表示させる",
  "bodyContent": "Tweetbot という Twitter アプリの設定画面で、テーブルビューのデータが下からしゃきんと表示されるのが恰好良かったので、それに似た動きをするサンプルコードを書いてみました。\n\n{{<app id=\"428851691\" title=\"Tweetbot ― 個性派Twitterクライアント (for iPhone) 2.6.2（￥250）\" src=\"http://a1335.phobos.apple.com/us/r1000/078/Purple/v4/29/7a/37/297a3777-a601-e622-d29f-a2dd59b1848f/temp..bzkxsbdn.100x100-75.png\">}}\n\n## Tweetbot 設定画面ライクなアニメーション付きで UITableView のデータを表示させる\n\n新規プロジェクト Single View Application で作成したものをテンプレートにコードを書いていきます。\n\nViewController.h\n\n```\n#import <UIKit/UIKit.h>\n#import <QuartzCore/QuartzCore.h>\n\n@interface ViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>\n\n@end\n```\n\nViewController.m\n\n```\n#import \"ViewController.h\"\n\n@implementation ViewController {\n    \n    UITableView *_tableView;\n    NSMutableArray *_objects;\n}\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n    \n    _tableView = [[UITableView alloc] initWithFrame:self.view.frame style:UITableViewStyleGrouped];\n    _tableView.dataSource = self;\n    _tableView.delegate = self;\n    _tableView.backgroundView = nil;\n    _tableView.backgroundColor = [UIColor clearColor];\n    [self.view addSubview:_tableView];\n    \n    _objects = [[NSMutableArray alloc] init];\n    \n    [self performSelector:@selector(setObjects) withObject:nil afterDelay:1.f];\n}\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n    // Dispose of any resources that can be recreated.\n}\n\n#pragma mark - TableView animation\n\n- (void)setObjects\n{\n    for (int i=0; i<100; i++) {\n        [_objects addObject:[NSString stringWithFormat:@\"%d\", i+1]];\n    }\n    [_tableView reloadData];\n    \n    CATransition *animation = [CATransition animation];\n    [animation setType:kCATransitionPush];\n    [animation setSubtype:kCATransitionFromTop];\n    [animation setDuration:0.2f];\n    [[_tableView layer] addAnimation:animation forKey:@\"ReloadAnimationKey\"];\n}\n\n#pragma mark - TableView\n\n- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView\n{\n    return 1;\n}\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n    return _objects.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    static NSString *CellIdentifier = @\"Cell\";\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier];\n    }\n    \n    cell.textLabel.text = [NSString stringWithFormat:@\"%@\", [_objects objectAtIndex:indexPath.row]];\n    \n    return cell;\n}\n\n@end\n```\n\nCATransition で切替効果を演出しています。Tweetbot ライクな動きをするのに重要なのはこの2行です。プッシュで表示＋上方向で、切り替えるようにしています。\n\n```\n    [animation setType:kCATransitionPush];\n    [animation setSubtype:kCATransitionFromTop];\n```\n\n実行すると下図みたいに、下から上に向かってテーブルビューのデータが表示されます。格好いいですね！\n\n![](/images/2012/12/5185_1.png)",
  "bodyHtml": "<p>Tweetbot という Twitter アプリの設定画面で、テーブルビューのデータが下からしゃきんと表示されるのが恰好良かったので、それに似た動きをするサンプルコードを書いてみました。</p>\n<p>{{&lt;app id=&quot;428851691&quot; title=&quot;Tweetbot ― 個性派Twitterクライアント (for iPhone) 2.6.2（￥250）&quot; src=&quot;http://a1335.phobos.apple.com/us/r1000/078/Purple/v4/29/7a/37/297a3777-a601-e622-d29f-a2dd59b1848f/temp..bzkxsbdn.100x100-75.png&quot;&gt;}}</p>\n<h2>Tweetbot 設定画面ライクなアニメーション付きで UITableView のデータを表示させる</h2>\n<p>新規プロジェクト Single View Application で作成したものをテンプレートにコードを書いていきます。</p>\n<p>ViewController.h</p>\n<pre><code>#import &lt;UIKit/UIKit.h&gt;\n#import &lt;QuartzCore/QuartzCore.h&gt;\n\n@interface ViewController : UIViewController &lt;UITableViewDataSource, UITableViewDelegate&gt;\n\n@end\n</code></pre>\n<p>ViewController.m</p>\n<pre><code>#import &quot;ViewController.h&quot;\n\n@implementation ViewController {\n    \n    UITableView *_tableView;\n    NSMutableArray *_objects;\n}\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n    \n    _tableView = [[UITableView alloc] initWithFrame:self.view.frame style:UITableViewStyleGrouped];\n    _tableView.dataSource = self;\n    _tableView.delegate = self;\n    _tableView.backgroundView = nil;\n    _tableView.backgroundColor = [UIColor clearColor];\n    [self.view addSubview:_tableView];\n    \n    _objects = [[NSMutableArray alloc] init];\n    \n    [self performSelector:@selector(setObjects) withObject:nil afterDelay:1.f];\n}\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n    // Dispose of any resources that can be recreated.\n}\n\n#pragma mark - TableView animation\n\n- (void)setObjects\n{\n    for (int i=0; i&lt;100; i++) {\n        [_objects addObject:[NSString stringWithFormat:@&quot;%d&quot;, i+1]];\n    }\n    [_tableView reloadData];\n    \n    CATransition *animation = [CATransition animation];\n    [animation setType:kCATransitionPush];\n    [animation setSubtype:kCATransitionFromTop];\n    [animation setDuration:0.2f];\n    [[_tableView layer] addAnimation:animation forKey:@&quot;ReloadAnimationKey&quot;];\n}\n\n#pragma mark - TableView\n\n- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView\n{\n    return 1;\n}\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n    return _objects.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    static NSString *CellIdentifier = @&quot;Cell&quot;;\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier];\n    }\n    \n    cell.textLabel.text = [NSString stringWithFormat:@&quot;%@&quot;, [_objects objectAtIndex:indexPath.row]];\n    \n    return cell;\n}\n\n@end\n</code></pre>\n<p>CATransition で切替効果を演出しています。Tweetbot ライクな動きをするのに重要なのはこの2行です。プッシュで表示＋上方向で、切り替えるようにしています。</p>\n<pre><code>    [animation setType:kCATransitionPush];\n    [animation setSubtype:kCATransitionFromTop];\n</code></pre>\n<p>実行すると下図みたいに、下から上に向かってテーブルビューのデータが表示されます。格好いいですね！</p>\n<p><img src=\"/images/2012/12/5185_1.png\" alt=\"\"></p>\n",
  "dir": "static/content/archives",
  "base": "2012-12-09-5185.json",
  "ext": ".json",
  "sourceBase": "2012-12-09-5185.md",
  "sourceExt": ".md"
}