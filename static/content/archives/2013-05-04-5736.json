{
  "categories": [
    "Objective-C"
  ],
  "date": "2013-05-04T13:52:46.000Z",
  "draft": false,
  "slug": 5736,
  "title": "[Objective-C] 配列に格納された数値データ、文字列、NSDictionary をソートする",
  "bodyContent": "配列（NSArray, NSMutableArray）に格納された数値データ、文字列、NSDictionary をソートする方法を紹介します。\n\n配列のソートには、NSSortDescriptor を利用します。NSortDescriptor には、ソート順（昇順、降順）の指定、比較するキーを登録して使用します。実際のコードとその出力結果を載せておきますので、参考にしてみてください。\n\n## 数値データ（NSNumber）\n\n```\nNSArray *array = @[@10, @1, @100, @0.1, @1000];\n    \nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:nil ascending:YES];\nNSArray *sortedArray = [array sortedArrayUsingDescriptors:@[sortDescriptor]];\n    \nNSLog(@\"%@\", sortedArray);\n\n// 出力結果\n// (\n//     \"0.1\",\n//     1,\n//     10,\n//     100,\n//     1000\n// )\n```\n\n## 文字列（NSString）\n\n```\nNSArray *array = @[@\"The\", @\"Catcher\", @\"in\", @\"the\", @\"Rye\"];\n    \nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:nil ascending:YES];\nNSArray *sortedArray = [array sortedArrayUsingDescriptors:@[sortDescriptor]];\n    \nNSLog(@\"%@\", sortedArray);\n\n// 出力結果\n// (\n//     Catcher,\n//     Rye,\n//     The,\n//     in,\n//     the\n// )\n```\n\n## 辞書データ（NSDictionary）\n\n```\nNSArray *array = @[@{@\"text\" : @\"The\", @\"value\" : @10},\n                   @{@\"text\" : @\"Catcher\", @\"value\" : @1},\n                   @{@\"text\" : @\"in\", @\"value\" : @100},\n                   @{@\"text\" : @\"the\", @\"value\" : @0.1},\n                   @{@\"text\" : @\"Rye\", @\"value\" : @1000}];\n    \nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@\"text\" ascending:YES];\nNSArray *sortedArray = [array sortedArrayUsingDescriptors:@[sortDescriptor]];\n    \nNSLog(@\"%@\", sortedArray);\n\n// 出力結果\n// (\n// {\n//     text = Catcher;\n//     value = 1;\n// },\n// {\n//     text = Rye;\n//     value = 1000;\n// },\n// {\n//     text = The;\n//     value = 10;\n// },\n// {\n//     text = in;\n//     value = 100;\n// },\n// {\n//     text = the;\n//     value = \"0.1\";\n// }\n// )\n```",
  "bodyHtml": "<p>配列（NSArray, NSMutableArray）に格納された数値データ、文字列、NSDictionary をソートする方法を紹介します。</p>\n<p>配列のソートには、NSSortDescriptor を利用します。NSortDescriptor には、ソート順（昇順、降順）の指定、比較するキーを登録して使用します。実際のコードとその出力結果を載せておきますので、参考にしてみてください。</p>\n<h2>数値データ（NSNumber）</h2>\n<pre><code>NSArray *array = @[@10, @1, @100, @0.1, @1000];\n    \nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:nil ascending:YES];\nNSArray *sortedArray = [array sortedArrayUsingDescriptors:@[sortDescriptor]];\n    \nNSLog(@&quot;%@&quot;, sortedArray);\n\n// 出力結果\n// (\n//     &quot;0.1&quot;,\n//     1,\n//     10,\n//     100,\n//     1000\n// )\n</code></pre>\n<h2>文字列（NSString）</h2>\n<pre><code>NSArray *array = @[@&quot;The&quot;, @&quot;Catcher&quot;, @&quot;in&quot;, @&quot;the&quot;, @&quot;Rye&quot;];\n    \nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:nil ascending:YES];\nNSArray *sortedArray = [array sortedArrayUsingDescriptors:@[sortDescriptor]];\n    \nNSLog(@&quot;%@&quot;, sortedArray);\n\n// 出力結果\n// (\n//     Catcher,\n//     Rye,\n//     The,\n//     in,\n//     the\n// )\n</code></pre>\n<h2>辞書データ（NSDictionary）</h2>\n<pre><code>NSArray *array = @[@{@&quot;text&quot; : @&quot;The&quot;, @&quot;value&quot; : @10},\n                   @{@&quot;text&quot; : @&quot;Catcher&quot;, @&quot;value&quot; : @1},\n                   @{@&quot;text&quot; : @&quot;in&quot;, @&quot;value&quot; : @100},\n                   @{@&quot;text&quot; : @&quot;the&quot;, @&quot;value&quot; : @0.1},\n                   @{@&quot;text&quot; : @&quot;Rye&quot;, @&quot;value&quot; : @1000}];\n    \nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@&quot;text&quot; ascending:YES];\nNSArray *sortedArray = [array sortedArrayUsingDescriptors:@[sortDescriptor]];\n    \nNSLog(@&quot;%@&quot;, sortedArray);\n\n// 出力結果\n// (\n// {\n//     text = Catcher;\n//     value = 1;\n// },\n// {\n//     text = Rye;\n//     value = 1000;\n// },\n// {\n//     text = The;\n//     value = 10;\n// },\n// {\n//     text = in;\n//     value = 100;\n// },\n// {\n//     text = the;\n//     value = &quot;0.1&quot;;\n// }\n// )\n</code></pre>\n",
  "dir": "static/content/archives",
  "base": "2013-05-04-5736.json",
  "ext": ".json",
  "sourceBase": "2013-05-04-5736.md",
  "sourceExt": ".md"
}