{
  "categories": [
    "iOS"
  ],
  "date": "2012-09-24T22:35:25.000Z",
  "draft": false,
  "slug": 4520,
  "title": "[iOS6] 引っ張って更新を簡単に実装できる UIRefreshControl を TableView で使ってみる",
  "bodyContent": "引っ張って更新が iOS6 からメールや Passbook で出来るようになりました（写真は Passbook）。\n\n![](/images/2012/09/4520_1.png)\n\nこの更新方法が iOS6 から簡単に実装できるようになったみたいですので、実際に使われる機会が多いテーブルビューに組み込んでみました。\n\nだいたい以下のような感じで、引っ張って更新が出来ます。\n\nここでは、1秒後に更新終了を知らせる endRefreshing というメソッドを呼んでいます。実際には、処理や通信が終ったタイミングで呼ぶと、グッドです。\n\n**ViewController.h**\n\n```\n#import <UIKit/UIKit.h>\n\n@interface ViewController : UIViewController <UITableViewDataSource, UITableViewDelegate> {\n    \n}\n\n@end\n```\n\n**ViewController.m**\n\n```\n#import \"ViewController.h\"\n\n@interface ViewController ()\n\n@end\n\n@implementation ViewController {\n\n    UITableView *_tableView;\n    UIRefreshControl *_refreshControl;\n}\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n    \n    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0.f, 0.f, self.view.frame.size.width, self.view.frame.size.height) style:UITableViewStylePlain];\n    _tableView.delegate = self;\n    _tableView.dataSource = self;\n    [self.view addSubview:_tableView];\n\n    _refreshControl = [[UIRefreshControl alloc] init];\n    [_refreshControl addTarget:self action:@selector(refresh) forControlEvents:UIControlEventValueChanged];\n    [_tableView addSubview:_refreshControl];\n}\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n    // Dispose of any resources that can be recreated.\n}\n\n#pragma mark - TableView\n\n- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView\n{\n    // Return the number of sections.\n    return 1;\n}\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n    // Return the number of rows in the section.\n    return 10;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    static NSString *CellIdentifier = @\"Cell\";\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];\n    \n    // Configure the cell...\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier];\n    }\n    cell.textLabel.text = [NSString stringWithFormat:@\"%d\", indexPath.row];\n    \n    return cell;\n}\n\n#pragma mark -\n\n- (void)refresh\n{\n    NSLog(@\"refresh\");\n\n    [NSTimer scheduledTimerWithTimeInterval:1.f target:self selector:@selector(endRefresh) userInfo:nil repeats:NO];\n}\n\n- (void)endRefresh\n{\n    [_refreshControl endRefreshing];\n}\n\n@end\n```\n\nシミュレータで動かしてみるとこんな感じ。\n\n![](/images/2012/09/4520_2.png)\n\n参考：[iOS6で追加されたUIRefreshControlの使い方 | a.out](http://adotout.sakura.ne.jp/?p=1120)",
  "bodyHtml": "<p>引っ張って更新が iOS6 からメールや Passbook で出来るようになりました（写真は Passbook）。</p>\n<p><img src=\"/images/2012/09/4520_1.png\" alt=\"\"></p>\n<p>この更新方法が iOS6 から簡単に実装できるようになったみたいですので、実際に使われる機会が多いテーブルビューに組み込んでみました。</p>\n<p>だいたい以下のような感じで、引っ張って更新が出来ます。</p>\n<p>ここでは、1秒後に更新終了を知らせる endRefreshing というメソッドを呼んでいます。実際には、処理や通信が終ったタイミングで呼ぶと、グッドです。</p>\n<p><strong>ViewController.h</strong></p>\n<pre><code>#import &lt;UIKit/UIKit.h&gt;\n\n@interface ViewController : UIViewController &lt;UITableViewDataSource, UITableViewDelegate&gt; {\n    \n}\n\n@end\n</code></pre>\n<p><strong>ViewController.m</strong></p>\n<pre><code>#import &quot;ViewController.h&quot;\n\n@interface ViewController ()\n\n@end\n\n@implementation ViewController {\n\n    UITableView *_tableView;\n    UIRefreshControl *_refreshControl;\n}\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n    \n    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0.f, 0.f, self.view.frame.size.width, self.view.frame.size.height) style:UITableViewStylePlain];\n    _tableView.delegate = self;\n    _tableView.dataSource = self;\n    [self.view addSubview:_tableView];\n\n    _refreshControl = [[UIRefreshControl alloc] init];\n    [_refreshControl addTarget:self action:@selector(refresh) forControlEvents:UIControlEventValueChanged];\n    [_tableView addSubview:_refreshControl];\n}\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n    // Dispose of any resources that can be recreated.\n}\n\n#pragma mark - TableView\n\n- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView\n{\n    // Return the number of sections.\n    return 1;\n}\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n    // Return the number of rows in the section.\n    return 10;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    static NSString *CellIdentifier = @&quot;Cell&quot;;\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];\n    \n    // Configure the cell...\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier];\n    }\n    cell.textLabel.text = [NSString stringWithFormat:@&quot;%d&quot;, indexPath.row];\n    \n    return cell;\n}\n\n#pragma mark -\n\n- (void)refresh\n{\n    NSLog(@&quot;refresh&quot;);\n\n    [NSTimer scheduledTimerWithTimeInterval:1.f target:self selector:@selector(endRefresh) userInfo:nil repeats:NO];\n}\n\n- (void)endRefresh\n{\n    [_refreshControl endRefreshing];\n}\n\n@end\n</code></pre>\n<p>シミュレータで動かしてみるとこんな感じ。</p>\n<p><img src=\"/images/2012/09/4520_2.png\" alt=\"\"></p>\n<p>参考：<a href=\"http://adotout.sakura.ne.jp/?p=1120\">iOS6で追加されたUIRefreshControlの使い方 | a.out</a></p>\n",
  "dir": "static/content/archives",
  "base": "2012-09-25-4520.json",
  "ext": ".json",
  "sourceBase": "2012-09-25-4520.md",
  "sourceExt": ".md"
}