{
  "categories": [
    "iOS"
  ],
  "date": "2013-01-05T13:37:09.000Z",
  "draft": false,
  "slug": 5368,
  "title": "[iOS SDK] UINavigationBar の戻るボタンの見た目をカスタマイズする",
  "bodyContent": "![](/images/2013/01/5368_1.png)\n\nUINavigationBar で、一個前の階層に戻る「戻るボタン」の外見をカスタマイズする際に、UIAppearance が使えそうで使えなかったので、独自に実装してみました。これよりもスマートな方法を知っていたら誰か教えてください。\n\n## UINavigationBar の戻るボタンの見た目をカスタマイズする\n\nカスタムされた戻るボタンを取り扱いやすいように、カテゴリによるクラス拡張を利用します。ここでは、「UIBarButtonItem+DesignedButton」というヘッダファイルとメソッドファイルを用意します。\n\n下図（backbtn@2x.png）のような背景画像を用意しました。これに加えて、押された場合の背景画像（backbtn_hl）も用意しておきます。\n\n![](/images/2013/01/5368_2.png)\n\nUIBarButtonItem+DesignedButton.h\n\n```\n#import <UIKit/UIKit.h>\n\n@interface UIBarButtonItem (DesignedButton)\n\n- (UIBarButtonItem *)designedBackBarButtonItemWithTitle:(NSString *)title target:(id)target action:(SEL)selector;\n\n@end\n```\n\nUIBarButtonItem+DesignedButton.m\n\n```\n#import \"UIBarButtonItem+DesignedButton.h\"\n\n@implementation UIBarButtonItem (DesignedButton)\n\n- (UIBarButtonItem *)designedBackBarButtonItemWithTitle:(NSString *)title target:(id)target action:(SEL)selector\n{\n    // 通常時の画像と押された時の画像を用意する\n    UIImage *image = [UIImage imageNamed:@\"backbtn.png\"];\n    UIImage *highlightedImage = [UIImage imageNamed:@\"backbtn_hl.png\"];\n    // 左右 17px 固定で引き伸ばして利用する\n    image = [image resizableImageWithCapInsets:UIEdgeInsetsMake(0, 17.f, 0, 17.f)];\n    highlightedImage = [highlightedImage resizableImageWithCapInsets:UIEdgeInsetsMake(0, 17.f, 0, 17.f)];\n\n    // 表示する文字に応じてボタンサイズを変更する\n    UIFont *font = [UIFont boldSystemFontOfSize:12.f];\n    CGSize textSize = [title sizeWithFont:font];\n    CGSize buttonSize = CGSizeMake(textSize.width + 24.f, image.size.height);\n\n    // ボタンを用意する\n    UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(0.f, 0.f, buttonSize.width, buttonSize.height)];\n    [button addTarget:target action:selector forControlEvents:UIControlEventTouchUpInside];\n    \n    [button setBackgroundImage:image forState:UIControlStateNormal];\n    [button setBackgroundImage:highlightedImage forState:UIControlStateHighlighted];\n\n    // ラベルを用意する    \n    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(4.f, 0.f, buttonSize.width, buttonSize.height)];\n    label.text = title;\n    label.textColor = [UIColor whiteColor];\n    label.font = font;\n    label.shadowColor = [UIColor colorWithWhite:0.0 alpha:0.2];\n    label.shadowOffset = CGSizeMake(0.f, 1.f);\n    label.backgroundColor = [UIColor clearColor];\n    label.textAlignment = UITextAlignmentCenter;\n    [button addSubview:label];\n    \n    return [[UIBarButtonItem alloc] initWithCustomView:button];\n}\n\n@end\n```\n\nこれで準備は終わりです。次はこれを実装する方法を示します。\n\n## 実装してみる\n\n先程、実装したファイルを import します。そして、カスタムされた戻るボタンを利用する時に、次のようなコードを書けば OK です。\n\n```\n    UIBarButtonItem *backButton = [[UIBarButtonItem alloc] designedBackBarButtonItemWithTitle:@\"戻る\" target:self action:@selector(backButtonTapped)];\n    self.navigationItem.leftBarButtonItem = backButton;\n```\n\nここで注意しておきたいのが、あくまで UIBarButtonItem を戻るボタンに偽装しているので、このままでは一階層前のビューに戻らない点です。なので、戻るために、次のメソッドを読ませます。\n\n```\n- (void)backButtonTapped\n{\n    [self.navigationController popViewControllerAnimated:YES];\n}\n```\n\nもっとスマートな方法があるとは思いますが、とりあえずこんな感じで実装しています。",
  "bodyHtml": "<p><img src=\"/images/2013/01/5368_1.png\" alt=\"\"></p>\n<p>UINavigationBar で、一個前の階層に戻る「戻るボタン」の外見をカスタマイズする際に、UIAppearance が使えそうで使えなかったので、独自に実装してみました。これよりもスマートな方法を知っていたら誰か教えてください。</p>\n<h2>UINavigationBar の戻るボタンの見た目をカスタマイズする</h2>\n<p>カスタムされた戻るボタンを取り扱いやすいように、カテゴリによるクラス拡張を利用します。ここでは、「UIBarButtonItem+DesignedButton」というヘッダファイルとメソッドファイルを用意します。</p>\n<p>下図（backbtn@2x.png）のような背景画像を用意しました。これに加えて、押された場合の背景画像（backbtn_hl）も用意しておきます。</p>\n<p><img src=\"/images/2013/01/5368_2.png\" alt=\"\"></p>\n<p>UIBarButtonItem+DesignedButton.h</p>\n<pre><code>#import &lt;UIKit/UIKit.h&gt;\n\n@interface UIBarButtonItem (DesignedButton)\n\n- (UIBarButtonItem *)designedBackBarButtonItemWithTitle:(NSString *)title target:(id)target action:(SEL)selector;\n\n@end\n</code></pre>\n<p>UIBarButtonItem+DesignedButton.m</p>\n<pre><code>#import &quot;UIBarButtonItem+DesignedButton.h&quot;\n\n@implementation UIBarButtonItem (DesignedButton)\n\n- (UIBarButtonItem *)designedBackBarButtonItemWithTitle:(NSString *)title target:(id)target action:(SEL)selector\n{\n    // 通常時の画像と押された時の画像を用意する\n    UIImage *image = [UIImage imageNamed:@&quot;backbtn.png&quot;];\n    UIImage *highlightedImage = [UIImage imageNamed:@&quot;backbtn_hl.png&quot;];\n    // 左右 17px 固定で引き伸ばして利用する\n    image = [image resizableImageWithCapInsets:UIEdgeInsetsMake(0, 17.f, 0, 17.f)];\n    highlightedImage = [highlightedImage resizableImageWithCapInsets:UIEdgeInsetsMake(0, 17.f, 0, 17.f)];\n\n    // 表示する文字に応じてボタンサイズを変更する\n    UIFont *font = [UIFont boldSystemFontOfSize:12.f];\n    CGSize textSize = [title sizeWithFont:font];\n    CGSize buttonSize = CGSizeMake(textSize.width + 24.f, image.size.height);\n\n    // ボタンを用意する\n    UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(0.f, 0.f, buttonSize.width, buttonSize.height)];\n    [button addTarget:target action:selector forControlEvents:UIControlEventTouchUpInside];\n    \n    [button setBackgroundImage:image forState:UIControlStateNormal];\n    [button setBackgroundImage:highlightedImage forState:UIControlStateHighlighted];\n\n    // ラベルを用意する    \n    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(4.f, 0.f, buttonSize.width, buttonSize.height)];\n    label.text = title;\n    label.textColor = [UIColor whiteColor];\n    label.font = font;\n    label.shadowColor = [UIColor colorWithWhite:0.0 alpha:0.2];\n    label.shadowOffset = CGSizeMake(0.f, 1.f);\n    label.backgroundColor = [UIColor clearColor];\n    label.textAlignment = UITextAlignmentCenter;\n    [button addSubview:label];\n    \n    return [[UIBarButtonItem alloc] initWithCustomView:button];\n}\n\n@end\n</code></pre>\n<p>これで準備は終わりです。次はこれを実装する方法を示します。</p>\n<h2>実装してみる</h2>\n<p>先程、実装したファイルを import します。そして、カスタムされた戻るボタンを利用する時に、次のようなコードを書けば OK です。</p>\n<pre><code>    UIBarButtonItem *backButton = [[UIBarButtonItem alloc] designedBackBarButtonItemWithTitle:@&quot;戻る&quot; target:self action:@selector(backButtonTapped)];\n    self.navigationItem.leftBarButtonItem = backButton;\n</code></pre>\n<p>ここで注意しておきたいのが、あくまで UIBarButtonItem を戻るボタンに偽装しているので、このままでは一階層前のビューに戻らない点です。なので、戻るために、次のメソッドを読ませます。</p>\n<pre><code>- (void)backButtonTapped\n{\n    [self.navigationController popViewControllerAnimated:YES];\n}\n</code></pre>\n<p>もっとスマートな方法があるとは思いますが、とりあえずこんな感じで実装しています。</p>\n",
  "dir": "static/content/archives",
  "base": "2013-01-05-5368.json",
  "ext": ".json",
  "sourceBase": "2013-01-05-5368.md",
  "sourceExt": ".md"
}