{
  "categories": [
    "JavaScript"
  ],
  "date": "2014-09-07T00:20:15.000Z",
  "draft": false,
  "slug": 6811,
  "title": "[jQuery] スマホサイトによくあるクリックで展開するメニューを実装する",
  "bodyContent": "こんな感じのスマホサイトによくあるクリックで展開するメニューを実装してみました。左に俗にいうハンバーガーボタン、右に検索ボタンを設置したものを想定しました。\n\n![](/images/2014/09/6811_1.gif)\n\n## 実装\n\n## html\n\nタグマークアップはこんな感じです。次の記事の方法を使って、左右にアイコンを配置しています。この方法だとシンプルに実装できます。→ [「次に進む/前に戻る」で CSS の記述量が減るテクニック · rakuishi.com](http://rakuishi.com/archives/6602)\n\n```\n<div class=\"container\">\n\n  <header>\n    <div class=\"menu\"><img src=\"images/menu.png\" width=\"20\" height=\"20\"></div>\n    <div class=\"search\"><img src=\"images/search.png\" width=\"20\" height=\"20\"></div>\n  </header>\n\n  <div class=\"js-menu\"></div>\n  <div class=\"js-search\"></div>\n\n</div>\n```\n\n## CSS\n\n今回の実装では、展開されるメニュー `js-*` である要素に `position: absolute` を指定して、オーバーレイする形をとっています。\n\nというのは、オーバーレイではなくて単に表示／非表示した場合、その下に存在する要素（例えば、記事）を押し出したり、引き出したりすることになるのですが、その要素量によっては、アニメーションがガタつくことがあります。\n\nよって、ここでは負担の少ないオーバーレイという形を取ります。\n\n```\n.js-menu, .js-search {\n  position: absolute;\n  top: 44px;\n  width: 100%;\n  height: 150px;\n}\n```\n\n## JavaScript\n\n要となる jQuery Script は、以下のように記述しました。わかりやすさのために、読み込み時に `hide()` を呼ぶようにしていますが、CSS に `display: none` を書くほうがパフォーマンスは良いと思います。\n\n```\n<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n<script type=\"text/javascript\">\n$(function() {\n  var menu = $(\"div.js-menu\");\n  var search = $(\"div.js-search\");\n  menu.hide();\n  search.hide();\n  $(\"div.menu\").on(\"click\", {a: menu, b: search}, slide);\n  $(\"div.search\").on(\"click\", {a: search, b: menu}, slide);\n  function slide(event) {\n    if (event.data.a.css(\"display\") === \"none\") {\n      event.data.a.slideDown(250);\n      event.data.b.slideUp(250);\n    } else {\n      event.data.a.slideUp(250);\n    }\n  }\n});\n</script>\n```\n\n## 参考\n\n* [jqueryでclick()のコールバック関数に引数(データ)を渡す方法 - not good but great](http://naoyashiga.hatenablog.com/entry/2013/10/22/150030)\n\n{{<amazon id=\"B00KNR2K1W\" title=\"現場でかならず使われている jQueryデザインのメソッド\" src=\"https://images-na.ssl-images-amazon.com/images/I/51THbS9nmYL._SL160_.jpg\">}}",
  "bodyHtml": "<p>こんな感じのスマホサイトによくあるクリックで展開するメニューを実装してみました。左に俗にいうハンバーガーボタン、右に検索ボタンを設置したものを想定しました。</p>\n<p><img src=\"/images/2014/09/6811_1.gif\" alt=\"\"></p>\n<h2>実装</h2>\n<h2>html</h2>\n<p>タグマークアップはこんな感じです。次の記事の方法を使って、左右にアイコンを配置しています。この方法だとシンプルに実装できます。→ <a href=\"http://rakuishi.com/archives/6602\">「次に進む/前に戻る」で CSS の記述量が減るテクニック · rakuishi.com</a></p>\n<pre><code>&lt;div class=&quot;container&quot;&gt;\n\n  &lt;header&gt;\n    &lt;div class=&quot;menu&quot;&gt;&lt;img src=&quot;images/menu.png&quot; width=&quot;20&quot; height=&quot;20&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;search&quot;&gt;&lt;img src=&quot;images/search.png&quot; width=&quot;20&quot; height=&quot;20&quot;&gt;&lt;/div&gt;\n  &lt;/header&gt;\n\n  &lt;div class=&quot;js-menu&quot;&gt;&lt;/div&gt;\n  &lt;div class=&quot;js-search&quot;&gt;&lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre>\n<h2>CSS</h2>\n<p>今回の実装では、展開されるメニュー <code>js-*</code> である要素に <code>position: absolute</code> を指定して、オーバーレイする形をとっています。</p>\n<p>というのは、オーバーレイではなくて単に表示／非表示した場合、その下に存在する要素（例えば、記事）を押し出したり、引き出したりすることになるのですが、その要素量によっては、アニメーションがガタつくことがあります。</p>\n<p>よって、ここでは負担の少ないオーバーレイという形を取ります。</p>\n<pre><code>.js-menu, .js-search {\n  position: absolute;\n  top: 44px;\n  width: 100%;\n  height: 150px;\n}\n</code></pre>\n<h2>JavaScript</h2>\n<p>要となる jQuery Script は、以下のように記述しました。わかりやすさのために、読み込み時に <code>hide()</code> を呼ぶようにしていますが、CSS に <code>display: none</code> を書くほうがパフォーマンスは良いと思います。</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://code.jquery.com/jquery-2.1.1.min.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n$(function() {\n  var menu = $(&quot;div.js-menu&quot;);\n  var search = $(&quot;div.js-search&quot;);\n  menu.hide();\n  search.hide();\n  $(&quot;div.menu&quot;).on(&quot;click&quot;, {a: menu, b: search}, slide);\n  $(&quot;div.search&quot;).on(&quot;click&quot;, {a: search, b: menu}, slide);\n  function slide(event) {\n    if (event.data.a.css(&quot;display&quot;) === &quot;none&quot;) {\n      event.data.a.slideDown(250);\n      event.data.b.slideUp(250);\n    } else {\n      event.data.a.slideUp(250);\n    }\n  }\n});\n&lt;/script&gt;\n</code></pre>\n<h2>参考</h2>\n<ul>\n<li><a href=\"http://naoyashiga.hatenablog.com/entry/2013/10/22/150030\">jqueryでclick()のコールバック関数に引数(データ)を渡す方法 - not good but great</a></li>\n</ul>\n<p>{{&lt;amazon id=&quot;B00KNR2K1W&quot; title=&quot;現場でかならず使われている jQueryデザインのメソッド&quot; src=&quot;https://images-na.ssl-images-amazon.com/images/I/51THbS9nmYL.<em>SL160</em>.jpg&quot;&gt;}}</p>\n",
  "dir": "static/content/archives",
  "base": "2014-09-07-6811.json",
  "ext": ".json",
  "sourceBase": "2014-09-07-6811.md",
  "sourceExt": ".md"
}