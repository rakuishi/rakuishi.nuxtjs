{
  "categories": [
    "Android"
  ],
  "date": "2014-06-15T00:08:18.000Z",
  "draft": false,
  "slug": 6637,
  "title": "[Android] アクティビティ内で動的にフラグメントを生成してレイアウトに追加する",
  "bodyContent": "この記事では、アクティビティ内で動的にフラグメントを生成してレイアウトに追加するまでを紹介します。\n\nMainActivity.java と activity_main.xml とMyListFragment.java の3つの役者で簡単なコードを書いてみます。\n\n## アクティビティ内で動的にフラグメントを生成する\n\n## activity_main.xml\n\nactivity_main.xml に、フラグメントの挿入先として `LinearLayout` の `@+id/container` を宣言します：\n\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  xmlns:tools=\"http://schemas.android.com/tools\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  android:orientation=\"vertical\"\n  tools:context=\"com.rakuishi.samplelistfragment.fragment.MainActivity\">\n\n  <LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:id=\"@+id/container\"/>\n\n</LinearLayout>\n```\n\n## MainActivity.java\n\n次は、MainActivity.java 内でフラグメントを追加するために、`FragmentTransaction` を利用します。これを開始するためには、`FragmentManager` の `beginTransaction()` メソッドを呼びます。`FragmentManager` は、`getFragmentManager()` メソッドで取得しますが、[Support Library を使う方法](http://rakuishi.com/archives/6609)では、`getSupportFragmentManager()` を使用します。\n\nフラグメントを作成し、`Bundle` を介してデータを渡しています。フラグメントの準備ができたら、`FragmentTransaction` の `add()` メソッドでアクティビティにフラグメントを追加します：\n\n```\npackage com.rakuishi.samplelistfragment.fragment;\n\nimport android.app.Activity;\nimport android.app.FragmentManager;\nimport android.app.FragmentTransaction;\nimport android.os.Bundle;\n\npublic class MainActivity extends Activity {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    // 渡すデータを準備する\n    String[] kurage = { \"プラヌラ\", \"ポリプ\", \"ストロビラ\", \"エフィラ\", \"稚クラゲ\", \"成体\" };\n    Bundle bundle = new Bundle();\n    bundle.putStringArray(\"kurage\", kurage);\n\n    // フラグメントを生成\n    MyListFragment fragment = new MyListFragment();\n    fragment.setArguments(bundle);\n\n    // フラグメントをアクティビティに追加する FragmentTransaction を利用する\n    FragmentManager manager = getFragmentManager();\n    FragmentTransaction transaction = manager.beginTransaction();\n    transaction.add(R.id.container, fragment, \"fragment\");\n    transaction.commit();\n  }\n}\n```\n\n## MyListFragment.java\n\nMyListFragment.java 内で `Bundle` のデータを受け取って描画します。`getArguments()` があるか、キー名が存在するか、を確認しておくとアプリがクラッシュするのを防げます。\n\n```\npackage com.rakuishi.samplelistfragment.fragment;\n\nimport android.app.ListFragment;\nimport android.os.Bundle;\nimport android.widget.ArrayAdapter;\n\npublic class MyListFragment extends ListFragment {\n  @Override\n  public void onActivityCreated(Bundle savedInstanceState) {\n    super.onActivityCreated(savedInstanceState);\n\n    if (getArguments() != null && getArguments().containsKey(\"kurage\")) {\n      String[] kurage = getArguments().getStringArray(\"kurage\");\n      ArrayAdapter adapter = new ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1, kurage);\n      setListAdapter(adapter);\n    }\n  }\n}\n```\n\n## 実行結果\n\n下図左が実行結果となります。右は、MyListFragment.java 内で何も `setListAdapter()` しなかった場合の表示です。何も描画されない場合は、ローディング中になるんですね。\n\n![](/images/2014/06/6637_1.png)",
  "bodyHtml": "<p>この記事では、アクティビティ内で動的にフラグメントを生成してレイアウトに追加するまでを紹介します。</p>\n<p>MainActivity.java と activity_main.xml とMyListFragment.java の3つの役者で簡単なコードを書いてみます。</p>\n<h2>アクティビティ内で動的にフラグメントを生成する</h2>\n<h2>activity_main.xml</h2>\n<p>activity_main.xml に、フラグメントの挿入先として <code>LinearLayout</code> の <code>@+id/container</code> を宣言します：</p>\n<pre><code>&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:orientation=&quot;vertical&quot;\n  tools:context=&quot;com.rakuishi.samplelistfragment.fragment.MainActivity&quot;&gt;\n\n  &lt;LinearLayout\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:orientation=&quot;vertical&quot;\n    android:id=&quot;@+id/container&quot;/&gt;\n\n&lt;/LinearLayout&gt;\n</code></pre>\n<h2>MainActivity.java</h2>\n<p>次は、MainActivity.java 内でフラグメントを追加するために、<code>FragmentTransaction</code> を利用します。これを開始するためには、<code>FragmentManager</code> の <code>beginTransaction()</code> メソッドを呼びます。<code>FragmentManager</code> は、<code>getFragmentManager()</code> メソッドで取得しますが、<a href=\"http://rakuishi.com/archives/6609\">Support Library を使う方法</a>では、<code>getSupportFragmentManager()</code> を使用します。</p>\n<p>フラグメントを作成し、<code>Bundle</code> を介してデータを渡しています。フラグメントの準備ができたら、<code>FragmentTransaction</code> の <code>add()</code> メソッドでアクティビティにフラグメントを追加します：</p>\n<pre><code>package com.rakuishi.samplelistfragment.fragment;\n\nimport android.app.Activity;\nimport android.app.FragmentManager;\nimport android.app.FragmentTransaction;\nimport android.os.Bundle;\n\npublic class MainActivity extends Activity {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    // 渡すデータを準備する\n    String[] kurage = { &quot;プラヌラ&quot;, &quot;ポリプ&quot;, &quot;ストロビラ&quot;, &quot;エフィラ&quot;, &quot;稚クラゲ&quot;, &quot;成体&quot; };\n    Bundle bundle = new Bundle();\n    bundle.putStringArray(&quot;kurage&quot;, kurage);\n\n    // フラグメントを生成\n    MyListFragment fragment = new MyListFragment();\n    fragment.setArguments(bundle);\n\n    // フラグメントをアクティビティに追加する FragmentTransaction を利用する\n    FragmentManager manager = getFragmentManager();\n    FragmentTransaction transaction = manager.beginTransaction();\n    transaction.add(R.id.container, fragment, &quot;fragment&quot;);\n    transaction.commit();\n  }\n}\n</code></pre>\n<h2>MyListFragment.java</h2>\n<p>MyListFragment.java 内で <code>Bundle</code> のデータを受け取って描画します。<code>getArguments()</code> があるか、キー名が存在するか、を確認しておくとアプリがクラッシュするのを防げます。</p>\n<pre><code>package com.rakuishi.samplelistfragment.fragment;\n\nimport android.app.ListFragment;\nimport android.os.Bundle;\nimport android.widget.ArrayAdapter;\n\npublic class MyListFragment extends ListFragment {\n  @Override\n  public void onActivityCreated(Bundle savedInstanceState) {\n    super.onActivityCreated(savedInstanceState);\n\n    if (getArguments() != null &amp;&amp; getArguments().containsKey(&quot;kurage&quot;)) {\n      String[] kurage = getArguments().getStringArray(&quot;kurage&quot;);\n      ArrayAdapter adapter = new ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1, kurage);\n      setListAdapter(adapter);\n    }\n  }\n}\n</code></pre>\n<h2>実行結果</h2>\n<p>下図左が実行結果となります。右は、MyListFragment.java 内で何も <code>setListAdapter()</code> しなかった場合の表示です。何も描画されない場合は、ローディング中になるんですね。</p>\n<p><img src=\"/images/2014/06/6637_1.png\" alt=\"\"></p>\n",
  "dir": "static/content/archives",
  "base": "2014-06-15-6637.json",
  "ext": ".json",
  "sourceBase": "2014-06-15-6637.md",
  "sourceExt": ".md"
}