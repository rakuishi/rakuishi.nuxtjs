{
  "categories": [
    "Android"
  ],
  "date": "2015-10-11T05:51:01.000Z",
  "draft": false,
  "slug": "release-android-library-to-bintray",
  "title": "Android のライブラリの作りかたと Bintray にアップロードするまでの手順",
  "bodyContent": "[Aileron](https://github.com/rakuishi/aileron) という Android のライブラリを作成しました。Activity や Fragment の生成時に、Intent に詰めた引数を取り出す手間を減らすためのライブラリです。ちなみに、Aileron（エルロン）とは、飛行機の補助翼のことです。\n\n折角作ったならば、使う時は build.gradle に、以下のように一行追加すれば、ライブラリを使えるようにしたい。今回は、Bintray というサービスにライブラリをアップロードして、それを実現しました。\n\n```\ndependencies {\n    compile 'com.rakuishi:aileron:0.1.0'\n}\n```\n\nこの記事では、Android Studio でのライブラリを作りかたと、Bintray にライブラリをアップロードするまでの手順を紹介します。\n\n## Android Studio でライブラリを作る\n\nAndroid のライブラリを作る時は、まずはサンプル用のプロジェクトを作り、そこにモジュールとしてライブラリを組み込むのが一般的みたいです。\n\nまずは普通に、新しく Project を作成します。Application name は、ライブラリ名で良いですが、Package name は、com.rakuishi.aileron.sample のように、最後に sample を付けておくと後で変える手間が減ります。\n\nProject を作成し終えたら、ルートディレクトリの app フォルダを 副クリック → Refactor → Rename から、sample に名前を変えます。特に必要な作業ではありませんが、ライブラリの多くは、sample というフォルダ名を採用しているため、その習慣に倣いました。\n\nMenu → File → New → New Module からモジュールを追加します。ライブラリの種類は、Android Library を選択しました。パッケージ名を com.rakuishi.aileron のようにし、Minimum SDK を設定します。\n\n後は、sample の build.gradle に、dependencies を追加すれば、ライブラリを sample で使えるようになります。\n\n```\ndependencies {\n    // 省略\n    compile project(':aileron')\n}\n```\n\n## Bintray にライブラリをアップロードする\n\n[Bintray](https://bintray.com/) に Sign In します（今回は、GitHub ログインを行いました）。その後、ユーザー画面 Edit → API Key 画面から、アップロードする際に必要になる API Key を確認できます。\n\n### bintray-release\n\nライブラリをアップロードするために、[novoda/bintray-release](https://github.com/novoda/bintray-release) というヘルパーを使用します。build.gradle にライブラリに必要となる情報を入力して、コマンドを叩くと Bintray にライブラリを登録する作業を行ってくれます。\n\nルートディレクトリにある build.gradle に、bintray-release を追加します。\n\n```\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.3.0'\n        classpath 'com.novoda:bintray-release:0.3.4' // 追加\n    }\n}\n```\n\n次に、ライブラリディレクトリにある build.gradle を以下のように修正します。`lintOptions` ですが、自分の環境では設定しないとエラーでアップロード出来なかったため追加してます。\n\n```\napply plugin: 'com.android.library'\napply plugin: 'com.novoda.bintray-release' // 追加\n\nandroid {\n    // 省略\n    lintOptions {\n        abortOnError false\n    }\n}\n\ndependencies {\n  // 省略\n}\n\n// 以下、必要な情報に書き換える\npublish {\n    userOrg = 'rakuishi'\n    groupId = 'com.rakuishi'\n    artifactId = 'aileron'\n    publishVersion = \"0.1.0\"\n    desc = 'Extracting values from bundle in activity or fragment made easy.'\n    website = 'https://github.com/rakuishi/aileron'\n}\n```\n\n後は、以下のコマンドを叩くと、Bintray にライブラリが登録されます。User と API Key は、適宜変えてください。\n\n```sh\n$ ./gradlew clean build bintrayUpload -PbintrayUser=[bintrayUser] -PbintrayKey=[bintrayKey] -PdryRun=false\n```\n\n### jcenter に登録する\n\nBintray の maven にライブラリが登録されたら、次に jcenter に登録します。以下のスクリーンショットは登録後なのですが、右下に jcenter に追加するボタンがあるはずなので、そこから申請を行います（フォームには特に何も埋めませんでした）。\n\n![](/images/2015/10/bintray.png)\n\n自分の場合は、2 時間ぐらいで承認されました。jcenter に追加された後は、以下のように、一行追加するだけでライブラリが使用できるようになります。お疲れ様でした！\n\n```\ndependencies {\n    compile 'com.rakuishi:aileron:0.1.0'\n}\n```\n\n## 参考\n\n* [Androidオープンソースライブラリの作り方 // Speaker Deck](https://speakerdeck.com/takahirom/androidopunsosuraiburarifalsezuo-rifang)\n* [BintrayにAndroidのライブラリをアップする - visible true](http://sys1yagi.hatenablog.com/entry/2015/02/06/002823)",
  "bodyHtml": "<p><a href=\"https://github.com/rakuishi/aileron\">Aileron</a> という Android のライブラリを作成しました。Activity や Fragment の生成時に、Intent に詰めた引数を取り出す手間を減らすためのライブラリです。ちなみに、Aileron（エルロン）とは、飛行機の補助翼のことです。</p>\n<p>折角作ったならば、使う時は build.gradle に、以下のように一行追加すれば、ライブラリを使えるようにしたい。今回は、Bintray というサービスにライブラリをアップロードして、それを実現しました。</p>\n<pre><code>dependencies {\n    compile 'com.rakuishi:aileron:0.1.0'\n}\n</code></pre>\n<p>この記事では、Android Studio でのライブラリを作りかたと、Bintray にライブラリをアップロードするまでの手順を紹介します。</p>\n<h2>Android Studio でライブラリを作る</h2>\n<p>Android のライブラリを作る時は、まずはサンプル用のプロジェクトを作り、そこにモジュールとしてライブラリを組み込むのが一般的みたいです。</p>\n<p>まずは普通に、新しく Project を作成します。Application name は、ライブラリ名で良いですが、Package name は、com.rakuishi.aileron.sample のように、最後に sample を付けておくと後で変える手間が減ります。</p>\n<p>Project を作成し終えたら、ルートディレクトリの app フォルダを 副クリック → Refactor → Rename から、sample に名前を変えます。特に必要な作業ではありませんが、ライブラリの多くは、sample というフォルダ名を採用しているため、その習慣に倣いました。</p>\n<p>Menu → File → New → New Module からモジュールを追加します。ライブラリの種類は、Android Library を選択しました。パッケージ名を com.rakuishi.aileron のようにし、Minimum SDK を設定します。</p>\n<p>後は、sample の build.gradle に、dependencies を追加すれば、ライブラリを sample で使えるようになります。</p>\n<pre><code>dependencies {\n    // 省略\n    compile project(':aileron')\n}\n</code></pre>\n<h2>Bintray にライブラリをアップロードする</h2>\n<p><a href=\"https://bintray.com/\">Bintray</a> に Sign In します（今回は、GitHub ログインを行いました）。その後、ユーザー画面 Edit → API Key 画面から、アップロードする際に必要になる API Key を確認できます。</p>\n<h3>bintray-release</h3>\n<p>ライブラリをアップロードするために、<a href=\"https://github.com/novoda/bintray-release\">novoda/bintray-release</a> というヘルパーを使用します。build.gradle にライブラリに必要となる情報を入力して、コマンドを叩くと Bintray にライブラリを登録する作業を行ってくれます。</p>\n<p>ルートディレクトリにある build.gradle に、bintray-release を追加します。</p>\n<pre><code>buildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.3.0'\n        classpath 'com.novoda:bintray-release:0.3.4' // 追加\n    }\n}\n</code></pre>\n<p>次に、ライブラリディレクトリにある build.gradle を以下のように修正します。<code>lintOptions</code> ですが、自分の環境では設定しないとエラーでアップロード出来なかったため追加してます。</p>\n<pre><code>apply plugin: 'com.android.library'\napply plugin: 'com.novoda.bintray-release' // 追加\n\nandroid {\n    // 省略\n    lintOptions {\n        abortOnError false\n    }\n}\n\ndependencies {\n  // 省略\n}\n\n// 以下、必要な情報に書き換える\npublish {\n    userOrg = 'rakuishi'\n    groupId = 'com.rakuishi'\n    artifactId = 'aileron'\n    publishVersion = &quot;0.1.0&quot;\n    desc = 'Extracting values from bundle in activity or fragment made easy.'\n    website = 'https://github.com/rakuishi/aileron'\n}\n</code></pre>\n<p>後は、以下のコマンドを叩くと、Bintray にライブラリが登録されます。User と API Key は、適宜変えてください。</p>\n<pre><code class=\"hljs\">$ ./gradlew clean build bintrayUpload -PbintrayUser=[bintrayUser] -PbintrayKey=[bintrayKey] -PdryRun=<span class=\"hljs-literal\">false</span></code></pre><h3>jcenter に登録する</h3>\n<p>Bintray の maven にライブラリが登録されたら、次に jcenter に登録します。以下のスクリーンショットは登録後なのですが、右下に jcenter に追加するボタンがあるはずなので、そこから申請を行います（フォームには特に何も埋めませんでした）。</p>\n<p><img src=\"/images/2015/10/bintray.png\" alt=\"\"></p>\n<p>自分の場合は、2 時間ぐらいで承認されました。jcenter に追加された後は、以下のように、一行追加するだけでライブラリが使用できるようになります。お疲れ様でした！</p>\n<pre><code>dependencies {\n    compile 'com.rakuishi:aileron:0.1.0'\n}\n</code></pre>\n<h2>参考</h2>\n<ul>\n<li><a href=\"https://speakerdeck.com/takahirom/androidopunsosuraiburarifalsezuo-rifang\">Androidオープンソースライブラリの作り方 // Speaker Deck</a></li>\n<li><a href=\"http://sys1yagi.hatenablog.com/entry/2015/02/06/002823\">BintrayにAndroidのライブラリをアップする - visible true</a></li>\n</ul>\n",
  "dir": "static/content/archives",
  "base": "2015-10-11-release-android-library-to-bintray.json",
  "ext": ".json",
  "sourceBase": "2015-10-11-release-android-library-to-bintray.md",
  "sourceExt": ".md"
}