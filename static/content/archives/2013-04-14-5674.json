{
  "categories": [
    "Mac"
  ],
  "date": "2013-04-14T08:55:32.000Z",
  "draft": false,
  "slug": 5674,
  "title": "Sketch  で始める iOS の自作 UI 素材 〜 UINavigationBar 背景画像の作成と実装例 〜",
  "bodyContent": "iOS アプリが標準パーツで動く形になって、次に気になるのは UI 素材をどのように自作するかです。素材は引き伸ばしてもギザギザならないベクタ形式で作成するのが好ましいですが、代表する illustrator が高価で、始めるハードルが高いように思います。\n\nUI デザインを作成するためのドローソフト Sketch を利用すれば、簡単に UI 素材が作れます。4,300 円といい値段がしますが、illustrator と比べると安価で、機能も申し分ないと思います。そして、何よりも動作が軽いのが特徴です。\n\nこの記事では、Sketch で iOS の自作 UI 素材を作成する一例として、UINavigationbar の背景素材を作成していきます。\n\n{{<app id=\"402476602\" title=\"Sketch 2.2.3（￥4,300）\" src=\"http://a1.mzstatic.com/us/r1000/080/Purple/v4/cb/69/31/cb6931c5-db72-8208-c312-a2456a65598e/app.100x100-75.png\">}}\n\n## まずは、標準の UINavigationBar の研究\n\nまずは、標準の素材を研究して方針をたてましょう。下図は、UINavigationBar を拡大したものです。\n\n![](/images/2013/04/5674_1.png)\n\nUINavigationBar は、横: 640px（retina）, 縦: 88px（retina）で、上から下にグラデーションがかかっています。光源は上にありますね。また、その内側の上下 2px（retina）にそれぞれ白と、ベースカラーの濃い色が入っています。\n\nこれを踏まえて、素材を実際に Sketch で作っていきます。\n\n## 1. 四角を作成する\n\nSketch を起動して、新規ファイルを作成すると下図の画面になります。左にレイヤー画面（Layer）、右に詳細画面（Inspector）があります。\n\n![](/images/2013/04/5674_2.png)\n\nまずは、左上にある Shape から Rectangle を選択して、カンバスに四角を描画します。大きさは retina サイズで横 640 px, 縦 88 px とします。サイズは、Inspector から変更できます。\n\n![](/images/2013/04/5674_3.png)\n\n塗り潰しの色は、プリセットの緑を選択しました。Inspector の Fill から色を選択し、Gradient のラジオボタンを有効にしてプリセットの緑色を選択すれば OK です。\n\n![](/images/2013/04/5674_4.png)\n\nここまでで、もうそれっぽいのができました。次は内側の上下に色を付けていきます。\n\n## 2. インナーシャドウを付ける\n\n上下に白と黒を付けるために、インナーシャドウをいじります。\n\nインナーシャドウは、対象の Rectangle を選択して、Inspector の Inner Shadows から変更できます。\n\n次のようにインナーシャドウの設定をしました。上の白は、標準 UI では、グラデーションでしたが、今回は簡略のためにベタ塗りです。\n\nx: 0, y: -2, Blur: 0, Spread: 0, Color: #315C00（透明度100%）  \nx: 0, y: 2, Blur: 0, Spread: 0, Color: #FFFFFF（透明度50%）\n\n![](/images/2013/04/5674_5.png)\n\nこれで素材の完成です。次は書き出しです。\n\n## 3. 書き出し\n\n書き出しは、File → Export… から行えます。書き出しは頻繁に利用するので、ショートカット command + shift + E を覚えておくと便利です。\n\n書き出すのは、とても簡単です。対象を範囲指定して、Export を押すだけです。カンバスが含まれる場合は、そこは透過色となります。\n\n![](/images/2013/04/5674_6.png)\n\n素材を書き出すと次のような画像が生成されます。\n\n![](/images/2013/04/5674_7.png)\n\n## 実装例\n\n先ほど作成した素材名は、「bg@2x.png」と名付けました。これをアプリ内で実際に UINavigationBar の背景画像として扱っていきましょう。\n\nAppDelegate.m にアピアランスとして記述します。こうすることで、アプリ内で使用する UINavigationBar は、すべてここで設定したものに置き換えられます。\n\n```\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\n    // Override point for customization after application launch.\n    \n    UIImage *navigationBarImage = [UIImage imageNamed:@\"bg.png\"];\n    [[UINavigationBar appearance] setBackgroundImage:navigationBarImage forBarMetrics:UIBarMetricsDefault];\n\n    MasterViewController *masterViewController = [[MasterViewController alloc] initWithNibName:@\"MasterViewController\" bundle:nil];\n    self.navigationController = [[UINavigationController alloc] initWithRootViewController:masterViewController];\n    self.window.rootViewController = self.navigationController;\n    [self.window makeKeyAndVisible];\n    return YES;\n}\n```\n\niOS シミュレータで確認するとこんな感じです。\n\n![](/images/2013/04/5674_8.png)\n\n自作素材を作るのは、ハードルが高いと思っていた人も Sketch なら簡単に作成出来ます。ぜひ、挑戦してみてください。\n\n{{<app id=\"402476602\" title=\"Sketch 2.2.3（￥4,300）\" src=\"http://a1.mzstatic.com/us/r1000/080/Purple/v4/cb/69/31/cb6931c5-db72-8208-c312-a2456a65598e/app.100x100-75.png\">}}",
  "bodyHtml": "<p>iOS アプリが標準パーツで動く形になって、次に気になるのは UI 素材をどのように自作するかです。素材は引き伸ばしてもギザギザならないベクタ形式で作成するのが好ましいですが、代表する illustrator が高価で、始めるハードルが高いように思います。</p>\n<p>UI デザインを作成するためのドローソフト Sketch を利用すれば、簡単に UI 素材が作れます。4,300 円といい値段がしますが、illustrator と比べると安価で、機能も申し分ないと思います。そして、何よりも動作が軽いのが特徴です。</p>\n<p>この記事では、Sketch で iOS の自作 UI 素材を作成する一例として、UINavigationbar の背景素材を作成していきます。</p>\n<p>{{&lt;app id=&quot;402476602&quot; title=&quot;Sketch 2.2.3（￥4,300）&quot; src=&quot;http://a1.mzstatic.com/us/r1000/080/Purple/v4/cb/69/31/cb6931c5-db72-8208-c312-a2456a65598e/app.100x100-75.png&quot;&gt;}}</p>\n<h2>まずは、標準の UINavigationBar の研究</h2>\n<p>まずは、標準の素材を研究して方針をたてましょう。下図は、UINavigationBar を拡大したものです。</p>\n<p><img src=\"/images/2013/04/5674_1.png\" alt=\"\"></p>\n<p>UINavigationBar は、横: 640px（retina）, 縦: 88px（retina）で、上から下にグラデーションがかかっています。光源は上にありますね。また、その内側の上下 2px（retina）にそれぞれ白と、ベースカラーの濃い色が入っています。</p>\n<p>これを踏まえて、素材を実際に Sketch で作っていきます。</p>\n<h2>1. 四角を作成する</h2>\n<p>Sketch を起動して、新規ファイルを作成すると下図の画面になります。左にレイヤー画面（Layer）、右に詳細画面（Inspector）があります。</p>\n<p><img src=\"/images/2013/04/5674_2.png\" alt=\"\"></p>\n<p>まずは、左上にある Shape から Rectangle を選択して、カンバスに四角を描画します。大きさは retina サイズで横 640 px, 縦 88 px とします。サイズは、Inspector から変更できます。</p>\n<p><img src=\"/images/2013/04/5674_3.png\" alt=\"\"></p>\n<p>塗り潰しの色は、プリセットの緑を選択しました。Inspector の Fill から色を選択し、Gradient のラジオボタンを有効にしてプリセットの緑色を選択すれば OK です。</p>\n<p><img src=\"/images/2013/04/5674_4.png\" alt=\"\"></p>\n<p>ここまでで、もうそれっぽいのができました。次は内側の上下に色を付けていきます。</p>\n<h2>2. インナーシャドウを付ける</h2>\n<p>上下に白と黒を付けるために、インナーシャドウをいじります。</p>\n<p>インナーシャドウは、対象の Rectangle を選択して、Inspector の Inner Shadows から変更できます。</p>\n<p>次のようにインナーシャドウの設定をしました。上の白は、標準 UI では、グラデーションでしたが、今回は簡略のためにベタ塗りです。</p>\n<p>x: 0, y: -2, Blur: 0, Spread: 0, Color: #315C00（透明度100%）<br>\nx: 0, y: 2, Blur: 0, Spread: 0, Color: #FFFFFF（透明度50%）</p>\n<p><img src=\"/images/2013/04/5674_5.png\" alt=\"\"></p>\n<p>これで素材の完成です。次は書き出しです。</p>\n<h2>3. 書き出し</h2>\n<p>書き出しは、File → Export… から行えます。書き出しは頻繁に利用するので、ショートカット command + shift + E を覚えておくと便利です。</p>\n<p>書き出すのは、とても簡単です。対象を範囲指定して、Export を押すだけです。カンバスが含まれる場合は、そこは透過色となります。</p>\n<p><img src=\"/images/2013/04/5674_6.png\" alt=\"\"></p>\n<p>素材を書き出すと次のような画像が生成されます。</p>\n<p><img src=\"/images/2013/04/5674_7.png\" alt=\"\"></p>\n<h2>実装例</h2>\n<p>先ほど作成した素材名は、「bg@2x.png」と名付けました。これをアプリ内で実際に UINavigationBar の背景画像として扱っていきましょう。</p>\n<p>AppDelegate.m にアピアランスとして記述します。こうすることで、アプリ内で使用する UINavigationBar は、すべてここで設定したものに置き換えられます。</p>\n<pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\n    // Override point for customization after application launch.\n    \n    UIImage *navigationBarImage = [UIImage imageNamed:@&quot;bg.png&quot;];\n    [[UINavigationBar appearance] setBackgroundImage:navigationBarImage forBarMetrics:UIBarMetricsDefault];\n\n    MasterViewController *masterViewController = [[MasterViewController alloc] initWithNibName:@&quot;MasterViewController&quot; bundle:nil];\n    self.navigationController = [[UINavigationController alloc] initWithRootViewController:masterViewController];\n    self.window.rootViewController = self.navigationController;\n    [self.window makeKeyAndVisible];\n    return YES;\n}\n</code></pre>\n<p>iOS シミュレータで確認するとこんな感じです。</p>\n<p><img src=\"/images/2013/04/5674_8.png\" alt=\"\"></p>\n<p>自作素材を作るのは、ハードルが高いと思っていた人も Sketch なら簡単に作成出来ます。ぜひ、挑戦してみてください。</p>\n<p>{{&lt;app id=&quot;402476602&quot; title=&quot;Sketch 2.2.3（￥4,300）&quot; src=&quot;http://a1.mzstatic.com/us/r1000/080/Purple/v4/cb/69/31/cb6931c5-db72-8208-c312-a2456a65598e/app.100x100-75.png&quot;&gt;}}</p>\n",
  "dir": "static/content/archives",
  "base": "2013-04-14-5674.json",
  "ext": ".json",
  "sourceBase": "2013-04-14-5674.md",
  "sourceExt": ".md"
}