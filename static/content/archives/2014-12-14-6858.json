{
  "categories": [
    "WordPress"
  ],
  "date": "2014-12-14T10:26:55.000Z",
  "draft": false,
  "slug": 6858,
  "title": "WordPress OB Cache: WordPress の出力バッファをキャッシュする",
  "bodyContent": "[PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/) という Google のウェブパフォーマンスツールで、ブログの表示スピード（サーバーの応答スピード）を指摘されるので、サーバーに負荷がかかる部分をキャッシュしようと思った。\n\nWordPress は動的生成で、ユーザーアクセスの度に、WordPress の PHP 群と、データベースから情報を読み込んでいる。そのあたりが、サーバーの応答スピードと関わっているはずだ。という前提を元に、WordPress の出力バッファをキャッシュするプラグインを作ってみた。\n\n## WordPress OB Cache\n\n* [rakuishi/wp-ob-cache](https://github.com/rakuishi/wp-ob-cache)\n\n仕組みとしては、WordPress の init フック時に、キャッシュが存在すればそれを返す、なければ `ob_start()` 関数を走らせて出力バッファを保存＆ユーザーに見せる。 この出力バッファは、PHP が展開された後の文字列だから、使い回せばサーバーにかかる負荷は少ないはずだ。\n\nだったのだが、導入後に各種計測サイトで数字を見たところ、スピードは全然変わらなかった。プラグインを作った後に、WordPress の内部を見たら、納得した。init フック時は、結構読み込まれた後らしい。\n\nindex.php → wp-blog-header.php → wp-load.php →wp-config.php → wp-settings.php という順番に読み込むのだが、この wp-settings.php で必要な PHP と、プラグインファイルが読まれた後に、350行目付近に、`do_action( 'init' )` が呼ばれている。その後に、wp-blog-header.php からテンプレートファイルが読まれる感じだ。\n\n```\n/**\n * Fires after WordPress has finished loading but before any headers are sent.\n *\n * Most of WP is loaded at this stage, and the user is authenticated. WP continues\n * to load on the init hook that follows (e.g. widgets), and many plugins instantiate\n * themselves on it for all sorts of reasons (e.g. they need a user, a taxonomy, etc.).\n *\n * If you wish to plug an action once WP is loaded, use the wp_loaded hook below.\n *\n * @since 1.5.0\n */\ndo_action( 'init' );\n```\n\nだから、恐らくは、この作ったこのキャッシュは、テーマファイルで動作している PHP の処理ぐらいしか肩代わりしてくれない。一日試しに使ってみて、プラグインを使用するのをやめた。\n\nちなみに、使用は自己責任でお願いします。もしも動かなくなった時は、このプラグインと、wp-content/wp-ob-cache のディレクトリを削除すれば OK です。一応、プラグインのアンインストール時に、作成したキャッシュディレクトリを削除するようにしている。\n\n## プラグインを作成する際に、参考にしたもの\n\n以下の本を参考にプラグインを作成した。最近は、仕事で WordPress のプラグインを開発しているが、この本はスーパー参考になる。WordPress に慣れていて、PHP で何か書いたことのある人向けだと思うけれど、プラグイン作成ならこれ一冊で十全だと思う。\n\n{{<amazon id=\"4797373520\" title=\"サイトの拡張性を飛躍的に高める WordPressプラグイン開発のバイブル\" src=\"https://images-na.ssl-images-amazon.com/images/I/51ZXuV1mt8L._SL160_.jpg\">}}\n\n今回作成したプラグインも、クラスによるプラグインのラップ（衝突防止）、アンインストール時に行う処理、プラグインのテストをこの本を参考に取り入れた。",
  "bodyHtml": "<p><a href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights</a> という Google のウェブパフォーマンスツールで、ブログの表示スピード（サーバーの応答スピード）を指摘されるので、サーバーに負荷がかかる部分をキャッシュしようと思った。</p>\n<p>WordPress は動的生成で、ユーザーアクセスの度に、WordPress の PHP 群と、データベースから情報を読み込んでいる。そのあたりが、サーバーの応答スピードと関わっているはずだ。という前提を元に、WordPress の出力バッファをキャッシュするプラグインを作ってみた。</p>\n<h2>WordPress OB Cache</h2>\n<ul>\n<li><a href=\"https://github.com/rakuishi/wp-ob-cache\">rakuishi/wp-ob-cache</a></li>\n</ul>\n<p>仕組みとしては、WordPress の init フック時に、キャッシュが存在すればそれを返す、なければ <code>ob_start()</code> 関数を走らせて出力バッファを保存＆ユーザーに見せる。 この出力バッファは、PHP が展開された後の文字列だから、使い回せばサーバーにかかる負荷は少ないはずだ。</p>\n<p>だったのだが、導入後に各種計測サイトで数字を見たところ、スピードは全然変わらなかった。プラグインを作った後に、WordPress の内部を見たら、納得した。init フック時は、結構読み込まれた後らしい。</p>\n<p>index.php → wp-blog-header.php → wp-load.php →wp-config.php → wp-settings.php という順番に読み込むのだが、この wp-settings.php で必要な PHP と、プラグインファイルが読まれた後に、350行目付近に、<code>do_action( 'init' )</code> が呼ばれている。その後に、wp-blog-header.php からテンプレートファイルが読まれる感じだ。</p>\n<pre><code>/**\n * Fires after WordPress has finished loading but before any headers are sent.\n *\n * Most of WP is loaded at this stage, and the user is authenticated. WP continues\n * to load on the init hook that follows (e.g. widgets), and many plugins instantiate\n * themselves on it for all sorts of reasons (e.g. they need a user, a taxonomy, etc.).\n *\n * If you wish to plug an action once WP is loaded, use the wp_loaded hook below.\n *\n * @since 1.5.0\n */\ndo_action( 'init' );\n</code></pre>\n<p>だから、恐らくは、この作ったこのキャッシュは、テーマファイルで動作している PHP の処理ぐらいしか肩代わりしてくれない。一日試しに使ってみて、プラグインを使用するのをやめた。</p>\n<p>ちなみに、使用は自己責任でお願いします。もしも動かなくなった時は、このプラグインと、wp-content/wp-ob-cache のディレクトリを削除すれば OK です。一応、プラグインのアンインストール時に、作成したキャッシュディレクトリを削除するようにしている。</p>\n<h2>プラグインを作成する際に、参考にしたもの</h2>\n<p>以下の本を参考にプラグインを作成した。最近は、仕事で WordPress のプラグインを開発しているが、この本はスーパー参考になる。WordPress に慣れていて、PHP で何か書いたことのある人向けだと思うけれど、プラグイン作成ならこれ一冊で十全だと思う。</p>\n<p>{{&lt;amazon id=&quot;4797373520&quot; title=&quot;サイトの拡張性を飛躍的に高める WordPressプラグイン開発のバイブル&quot; src=&quot;https://images-na.ssl-images-amazon.com/images/I/51ZXuV1mt8L.<em>SL160</em>.jpg&quot;&gt;}}</p>\n<p>今回作成したプラグインも、クラスによるプラグインのラップ（衝突防止）、アンインストール時に行う処理、プラグインのテストをこの本を参考に取り入れた。</p>\n",
  "dir": "static/content/archives",
  "base": "2014-12-14-6858.json",
  "ext": ".json",
  "sourceBase": "2014-12-14-6858.md",
  "sourceExt": ".md"
}