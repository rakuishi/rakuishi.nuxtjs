{
  "categories": [
    "iOS"
  ],
  "date": "2012-04-19T12:10:28.000Z",
  "draft": false,
  "slug": 3398,
  "title": "[iOS SDK] アプリがアクティブになる度に呼ばれる applicationDidBecomeActive から View Controller に処理を渡す方法",
  "bodyContent": "View Controller 内に記述する viewDidload, viewWillAppear メソッドなどは、新しくアプリが起動した時、アプリ内の画面遷移後などに呼ばれます。\n\nしかし、他のアプリから切り替わった時（アクティブになった時）には、View Controller 内のメソッドは、呼ばれることはないようです。\n\nアクティブになった時には、UIApplicationDelegate プロトコルにある - (void) applicationDidBecomeActive:( UIApplication ) application メソッドが呼び出されますが、その処理は View Controller で行いたい。\n\nそこで、アプリがアクティブになる度に呼ばれる applicationDidBecomeActive から View Controller に処理を渡す方法を調べましたので、紹介します。\n\n## 追記 2013年5月6日 11:48\n\n以下の様な処理を行わずとも、ViewController に次の NSNotification を登録しておけば、ApplicationDidBecomeActive のタイミングで通知が飛んできます。Yonemoto さん、ありがとうございました！\n\n```\n[[NSNotificationCenter defaultCenter] addObserver:self\n                                         selector:@selector(applicationDidBecomeActive)\n                                             name:UIApplicationDidBecomeActiveNotification\n                                           object:nil];\n```\n\n## デフォルトの通知センタを作成して処理を渡す\n\nNSNotificationCenter というクラスを使用すると、通知という仕組みを使用できます。\n\nここでは、applicationDidBecomeActive にデフォルトの通知センタを作成して、そこの通知を View Controller 内で受け取るように実装していきます。\n\nAppDelegate.m に、デフォルト通知を用意します。\n\n```\n- (void)applicationDidBecomeActive:(UIApplication *)application\n{\n    [[NSNotificationCenter defaultCenter] postNotificationName:@\"applicationDidBecomeActive\" object:nil];\n}\n```\n\n次に、ViewController.m に受け取る処理（オブザーバの登録）と受け取った後の処理を記述していきます。\n\n```\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    [[NSNotificationCenter defaultCenter] addObserver:self \n                                             selector:@selector(applicationDidBecomeActive)\n                                                 name:@\"applicationDidBecomeActive\"\n                                               object:nil];\n}\n\n- (void)applicationDidBecomeActive {\n    NSLog(@\"hogehoge\");\n}\n```\n\ndealloc メソッドで、applicationDidBecomeActive がオブザーバとなっている設定をデフォルトの通知センタから削除します。\n\n```\n- (void)dealloc {\n    [[NSNotificationCenter defaultCenter] removeObserver:self name:@\"applicationDidBecomeActive\" object:nil];\n    [super dealloc];   \n}\n```\n\nこれでアプリがアクティブになるたびに、「hogehoge」と表示されるはずです。\n\n## Special Thanks !\n\n* [iphone - How to resume process on applicationDidBecomeActive - Stack Overflow](http://stackoverflow.com/questions/6075545/how-to-resume-process-on-applicationdidbecomeactive)\n* [NSNotificationCenter - iPhoneアプリ開発の虎の巻](http://iphone-tora.sakura.ne.jp/nsnotificationcenter.html)",
  "bodyHtml": "<p>View Controller 内に記述する viewDidload, viewWillAppear メソッドなどは、新しくアプリが起動した時、アプリ内の画面遷移後などに呼ばれます。</p>\n<p>しかし、他のアプリから切り替わった時（アクティブになった時）には、View Controller 内のメソッドは、呼ばれることはないようです。</p>\n<p>アクティブになった時には、UIApplicationDelegate プロトコルにある - (void) applicationDidBecomeActive:( UIApplication ) application メソッドが呼び出されますが、その処理は View Controller で行いたい。</p>\n<p>そこで、アプリがアクティブになる度に呼ばれる applicationDidBecomeActive から View Controller に処理を渡す方法を調べましたので、紹介します。</p>\n<h2>追記 2013年5月6日 11:48</h2>\n<p>以下の様な処理を行わずとも、ViewController に次の NSNotification を登録しておけば、ApplicationDidBecomeActive のタイミングで通知が飛んできます。Yonemoto さん、ありがとうございました！</p>\n<pre><code>[[NSNotificationCenter defaultCenter] addObserver:self\n                                         selector:@selector(applicationDidBecomeActive)\n                                             name:UIApplicationDidBecomeActiveNotification\n                                           object:nil];\n</code></pre>\n<h2>デフォルトの通知センタを作成して処理を渡す</h2>\n<p>NSNotificationCenter というクラスを使用すると、通知という仕組みを使用できます。</p>\n<p>ここでは、applicationDidBecomeActive にデフォルトの通知センタを作成して、そこの通知を View Controller 内で受け取るように実装していきます。</p>\n<p>AppDelegate.m に、デフォルト通知を用意します。</p>\n<pre><code>- (void)applicationDidBecomeActive:(UIApplication *)application\n{\n    [[NSNotificationCenter defaultCenter] postNotificationName:@&quot;applicationDidBecomeActive&quot; object:nil];\n}\n</code></pre>\n<p>次に、ViewController.m に受け取る処理（オブザーバの登録）と受け取った後の処理を記述していきます。</p>\n<pre><code>- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    [[NSNotificationCenter defaultCenter] addObserver:self \n                                             selector:@selector(applicationDidBecomeActive)\n                                                 name:@&quot;applicationDidBecomeActive&quot;\n                                               object:nil];\n}\n\n- (void)applicationDidBecomeActive {\n    NSLog(@&quot;hogehoge&quot;);\n}\n</code></pre>\n<p>dealloc メソッドで、applicationDidBecomeActive がオブザーバとなっている設定をデフォルトの通知センタから削除します。</p>\n<pre><code>- (void)dealloc {\n    [[NSNotificationCenter defaultCenter] removeObserver:self name:@&quot;applicationDidBecomeActive&quot; object:nil];\n    [super dealloc];   \n}\n</code></pre>\n<p>これでアプリがアクティブになるたびに、「hogehoge」と表示されるはずです。</p>\n<h2>Special Thanks !</h2>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6075545/how-to-resume-process-on-applicationdidbecomeactive\">iphone - How to resume process on applicationDidBecomeActive - Stack Overflow</a></li>\n<li><a href=\"http://iphone-tora.sakura.ne.jp/nsnotificationcenter.html\">NSNotificationCenter - iPhoneアプリ開発の虎の巻</a></li>\n</ul>\n",
  "dir": "static/content/archives",
  "base": "2012-04-19-3398.json",
  "ext": ".json",
  "sourceBase": "2012-04-19-3398.md",
  "sourceExt": ".md"
}