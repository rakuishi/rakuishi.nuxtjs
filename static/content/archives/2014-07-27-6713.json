{
  "categories": [
    "WordPress"
  ],
  "date": "2014-07-27T02:36:05.000Z",
  "draft": false,
  "slug": 6713,
  "title": "[WordPress] 記事を JSON で出力する API ページを作る",
  "bodyContent": "WordPress の記事を外部から取得する際は、基本的にフィードを利用しますが、その場合、取得できる最大件数が決められていたり、公開された記事しか取得できないなどの制約があります。\n\nそのような制約を無視して、WordPress に蓄えた情報を JSON で出力する API ページを作る方法を紹介します。\n\n## API Page Template を作成する\n\nAPI は、WordPress で現在適用しているテーマファイルに、オリジナル固定ページという形で設置します。最新記事3件を JSON で出力するコードが書かれた `api-page.php` を用意します：\n\n```\n<?php\n/*\nTemplate Name: API Page\n*/\n\n$args = array(\n  'numberposts' => 3,\n  'orderby'     => 'post_date',\n  'order'       => 'DESC',\n);\n$posts = get_posts($args);\n\nif($posts): foreach($posts as $post):\n  setup_postdata($post);\n  $json[] = $post;\nendforeach; endif;\n\nheader(\"Content-Type: application/json; charset=utf-8\");\necho json_encode($json);\n```\n\n`get_posts()` には、多くのパラメータを渡すことができます。詳しくは、WordPress Codex ページに載っています。&rarr; [テンプレートタグ/get posts - WordPress Codex 日本語版](http://wpdocs.sourceforge.jp/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%BF%E3%82%B0/get_posts)\n\n変更例としては、`numberposts = -1` にすることで全件出力できます。今回は指定しませんでしたが、`post_status = any` にすればまだ公開されていない記事が取得できます。拡張例としては、GET パラメータにカテゴリ ID を指定し、それを利用することで任意のカテゴリだけを出力するなどもできます。\n\n作成した `api-page.php` は、適用しているテーマファイルに追加しておきます。\n\n## 固定ページを作成する\n\nWordPress 管理画面から固定ページを新しく作成します。\n\n[Page Attribute] → [Template] から先ほど作成した [API Page] を選択します。また、Permalink を /api にしておくと雰囲気が高まります。適当な記事タイトルを入力して公開します。\n\n![](/images/2014/07/6713_1.png)\n\n## 出力例\n\n指定した Permalink の場所にアクセスすると以下のように JSON が出力されます：\n\n```\n[\n    {\n        \"ID\": 6698,\n        \"post_author\": \"1\",\n        \"post_date\": \"2014-07-10 05:46:55\",\n        \"post_date_gmt\": \"2014-07-09 20:46:55\",\n        \"post_content\": \"省略\",\n        \"post_title\": \"ハリオ コーヒーミル・セラミックスリム\",\n        \"post_excerpt\": \"\",\n        \"post_status\": \"publish\",\n        \"comment_status\": \"open\",\n        \"ping_status\": \"closed\",\n        \"post_password\": \"\",\n        \"post_name\": \"省略\",\n        \"to_ping\": \"\",\n        \"pinged\": \"\",\n        \"post_modified\": \"2014-07-10 21:32:23\",\n        \"post_modified_gmt\": \"2014-07-10 12:32:23\",\n        \"post_content_filtered\": \"\",\n        \"post_parent\": 0,\n        \"guid\": \"http://rakuishi.com/?p=6698\",\n        \"menu_order\": 0,\n        \"post_type\": \"post\",\n        \"post_mime_type\": \"\",\n        \"comment_count\": \"0\",\n        \"filter\": \"raw\"\n    },\n    {\n        /* 省略 */\n    },\n    {\n        /* 省略 */\n    }\n]\n```\n\n{{<amazon id=\"4797373520\" title=\"サイトの拡張性を飛躍的に高める WordPressプラグイン開発のバイブル\" src=\"https://images-na.ssl-images-amazon.com/images/I/51CKENT4umL._SL160_.jpg\">}}",
  "bodyHtml": "<p>WordPress の記事を外部から取得する際は、基本的にフィードを利用しますが、その場合、取得できる最大件数が決められていたり、公開された記事しか取得できないなどの制約があります。</p>\n<p>そのような制約を無視して、WordPress に蓄えた情報を JSON で出力する API ページを作る方法を紹介します。</p>\n<h2>API Page Template を作成する</h2>\n<p>API は、WordPress で現在適用しているテーマファイルに、オリジナル固定ページという形で設置します。最新記事3件を JSON で出力するコードが書かれた <code>api-page.php</code> を用意します：</p>\n<pre><code>&lt;?php\n/*\nTemplate Name: API Page\n*/\n\n$args = array(\n  'numberposts' =&gt; 3,\n  'orderby'     =&gt; 'post_date',\n  'order'       =&gt; 'DESC',\n);\n$posts = get_posts($args);\n\nif($posts): foreach($posts as $post):\n  setup_postdata($post);\n  $json[] = $post;\nendforeach; endif;\n\nheader(&quot;Content-Type: application/json; charset=utf-8&quot;);\necho json_encode($json);\n</code></pre>\n<p><code>get_posts()</code> には、多くのパラメータを渡すことができます。詳しくは、WordPress Codex ページに載っています。→ <a href=\"http://wpdocs.sourceforge.jp/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%BF%E3%82%B0/get_posts\">テンプレートタグ/get posts - WordPress Codex 日本語版</a></p>\n<p>変更例としては、<code>numberposts = -1</code> にすることで全件出力できます。今回は指定しませんでしたが、<code>post_status = any</code> にすればまだ公開されていない記事が取得できます。拡張例としては、GET パラメータにカテゴリ ID を指定し、それを利用することで任意のカテゴリだけを出力するなどもできます。</p>\n<p>作成した <code>api-page.php</code> は、適用しているテーマファイルに追加しておきます。</p>\n<h2>固定ページを作成する</h2>\n<p>WordPress 管理画面から固定ページを新しく作成します。</p>\n<p>[Page Attribute] → [Template] から先ほど作成した [API Page] を選択します。また、Permalink を /api にしておくと雰囲気が高まります。適当な記事タイトルを入力して公開します。</p>\n<p><img src=\"/images/2014/07/6713_1.png\" alt=\"\"></p>\n<h2>出力例</h2>\n<p>指定した Permalink の場所にアクセスすると以下のように JSON が出力されます：</p>\n<pre><code>[\n    {\n        &quot;ID&quot;: 6698,\n        &quot;post_author&quot;: &quot;1&quot;,\n        &quot;post_date&quot;: &quot;2014-07-10 05:46:55&quot;,\n        &quot;post_date_gmt&quot;: &quot;2014-07-09 20:46:55&quot;,\n        &quot;post_content&quot;: &quot;省略&quot;,\n        &quot;post_title&quot;: &quot;ハリオ コーヒーミル・セラミックスリム&quot;,\n        &quot;post_excerpt&quot;: &quot;&quot;,\n        &quot;post_status&quot;: &quot;publish&quot;,\n        &quot;comment_status&quot;: &quot;open&quot;,\n        &quot;ping_status&quot;: &quot;closed&quot;,\n        &quot;post_password&quot;: &quot;&quot;,\n        &quot;post_name&quot;: &quot;省略&quot;,\n        &quot;to_ping&quot;: &quot;&quot;,\n        &quot;pinged&quot;: &quot;&quot;,\n        &quot;post_modified&quot;: &quot;2014-07-10 21:32:23&quot;,\n        &quot;post_modified_gmt&quot;: &quot;2014-07-10 12:32:23&quot;,\n        &quot;post_content_filtered&quot;: &quot;&quot;,\n        &quot;post_parent&quot;: 0,\n        &quot;guid&quot;: &quot;http://rakuishi.com/?p=6698&quot;,\n        &quot;menu_order&quot;: 0,\n        &quot;post_type&quot;: &quot;post&quot;,\n        &quot;post_mime_type&quot;: &quot;&quot;,\n        &quot;comment_count&quot;: &quot;0&quot;,\n        &quot;filter&quot;: &quot;raw&quot;\n    },\n    {\n        /* 省略 */\n    },\n    {\n        /* 省略 */\n    }\n]\n</code></pre>\n<p>{{&lt;amazon id=&quot;4797373520&quot; title=&quot;サイトの拡張性を飛躍的に高める WordPressプラグイン開発のバイブル&quot; src=&quot;https://images-na.ssl-images-amazon.com/images/I/51CKENT4umL.<em>SL160</em>.jpg&quot;&gt;}}</p>\n",
  "dir": "static/content/archives",
  "base": "2014-07-27-6713.json",
  "ext": ".json",
  "sourceBase": "2014-07-27-6713.md",
  "sourceExt": ".md"
}